// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geo.proto

package org.openlca.geo.geojson;

public final class Proto {
  private Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.Point)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double x = 1;</code>
     * @return The x.
     */
    double getX();

    /**
     * <code>double y = 2;</code>
     * @return The y.
     */
    double getY();
  }
  /**
   * Protobuf type {@code geoproto.Point}
   */
  public static final class Point extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.Point)
      PointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Point.newBuilder() to construct.
    private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Point() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Point();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Point(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {

              x_ = input.readDouble();
              break;
            }
            case 17: {

              y_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Point_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Point_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.Point.class, org.openlca.geo.geojson.Proto.Point.Builder.class);
    }

    public static final int X_FIELD_NUMBER = 1;
    private double x_;
    /**
     * <code>double x = 1;</code>
     * @return The x.
     */
    @java.lang.Override
    public double getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 2;
    private double y_;
    /**
     * <code>double y = 2;</code>
     * @return The y.
     */
    @java.lang.Override
    public double getY() {
      return y_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x_ != 0D) {
        output.writeDouble(1, x_);
      }
      if (y_ != 0D) {
        output.writeDouble(2, y_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, x_);
      }
      if (y_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, y_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.Point)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.Point other = (org.openlca.geo.geojson.Proto.Point) obj;

      if (java.lang.Double.doubleToLongBits(getX())
          != java.lang.Double.doubleToLongBits(
              other.getX())) return false;
      if (java.lang.Double.doubleToLongBits(getY())
          != java.lang.Double.doubleToLongBits(
              other.getY())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getX()));
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getY()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.Point prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.Point}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.Point)
        org.openlca.geo.geojson.Proto.PointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Point_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.Point.class, org.openlca.geo.geojson.Proto.Point.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.Point.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x_ = 0D;

        y_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Point_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Point getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.Point.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Point build() {
        org.openlca.geo.geojson.Proto.Point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Point buildPartial() {
        org.openlca.geo.geojson.Proto.Point result = new org.openlca.geo.geojson.Proto.Point(this);
        result.x_ = x_;
        result.y_ = y_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.Point) {
          return mergeFrom((org.openlca.geo.geojson.Proto.Point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.Point other) {
        if (other == org.openlca.geo.geojson.Proto.Point.getDefaultInstance()) return this;
        if (other.getX() != 0D) {
          setX(other.getX());
        }
        if (other.getY() != 0D) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.Point parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.Point) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double x_ ;
      /**
       * <code>double x = 1;</code>
       * @return The x.
       */
      @java.lang.Override
      public double getX() {
        return x_;
      }
      /**
       * <code>double x = 1;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(double value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double x = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        
        x_ = 0D;
        onChanged();
        return this;
      }

      private double y_ ;
      /**
       * <code>double y = 2;</code>
       * @return The y.
       */
      @java.lang.Override
      public double getY() {
        return y_;
      }
      /**
       * <code>double y = 2;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(double value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double y = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        
        y_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.Point)
    }

    // @@protoc_insertion_point(class_scope:geoproto.Point)
    private static final org.openlca.geo.geojson.Proto.Point DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.Point();
    }

    public static org.openlca.geo.geojson.Proto.Point getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Point>
        PARSER = new com.google.protobuf.AbstractParser<Point>() {
      @java.lang.Override
      public Point parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Point(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Point> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Point> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Point getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.MultiPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    java.util.List<org.openlca.geo.geojson.Proto.Point> 
        getPointList();
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    org.openlca.geo.geojson.Proto.Point getPoint(int index);
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    int getPointCount();
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    java.util.List<? extends org.openlca.geo.geojson.Proto.PointOrBuilder> 
        getPointOrBuilderList();
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code geoproto.MultiPoint}
   */
  public static final class MultiPoint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.MultiPoint)
      MultiPointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiPoint.newBuilder() to construct.
    private MultiPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiPoint() {
      point_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiPoint();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                point_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Point>();
                mutable_bitField0_ |= 0x00000001;
              }
              point_.add(
                  input.readMessage(org.openlca.geo.geojson.Proto.Point.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          point_ = java.util.Collections.unmodifiableList(point_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.MultiPoint.class, org.openlca.geo.geojson.Proto.MultiPoint.Builder.class);
    }

    public static final int POINT_FIELD_NUMBER = 1;
    private java.util.List<org.openlca.geo.geojson.Proto.Point> point_;
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.geo.geojson.Proto.Point> getPointList() {
      return point_;
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.geo.geojson.Proto.PointOrBuilder> 
        getPointOrBuilderList() {
      return point_;
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public int getPointCount() {
      return point_.size();
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Point getPoint(int index) {
      return point_.get(index);
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder(
        int index) {
      return point_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < point_.size(); i++) {
        output.writeMessage(1, point_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < point_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, point_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.MultiPoint)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.MultiPoint other = (org.openlca.geo.geojson.Proto.MultiPoint) obj;

      if (!getPointList()
          .equals(other.getPointList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPointCount() > 0) {
        hash = (37 * hash) + POINT_FIELD_NUMBER;
        hash = (53 * hash) + getPointList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.MultiPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.MultiPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.MultiPoint)
        org.openlca.geo.geojson.Proto.MultiPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPoint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.MultiPoint.class, org.openlca.geo.geojson.Proto.MultiPoint.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.MultiPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPoint_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPoint getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPoint build() {
        org.openlca.geo.geojson.Proto.MultiPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPoint buildPartial() {
        org.openlca.geo.geojson.Proto.MultiPoint result = new org.openlca.geo.geojson.Proto.MultiPoint(this);
        int from_bitField0_ = bitField0_;
        if (pointBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            point_ = java.util.Collections.unmodifiableList(point_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.point_ = point_;
        } else {
          result.point_ = pointBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.MultiPoint) {
          return mergeFrom((org.openlca.geo.geojson.Proto.MultiPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.MultiPoint other) {
        if (other == org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance()) return this;
        if (pointBuilder_ == null) {
          if (!other.point_.isEmpty()) {
            if (point_.isEmpty()) {
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointIsMutable();
              point_.addAll(other.point_);
            }
            onChanged();
          }
        } else {
          if (!other.point_.isEmpty()) {
            if (pointBuilder_.isEmpty()) {
              pointBuilder_.dispose();
              pointBuilder_ = null;
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointFieldBuilder() : null;
            } else {
              pointBuilder_.addAllMessages(other.point_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.MultiPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.MultiPoint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.openlca.geo.geojson.Proto.Point> point_ =
        java.util.Collections.emptyList();
      private void ensurePointIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          point_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Point>(point_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder> pointBuilder_;

      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Point> getPointList() {
        if (pointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(point_);
        } else {
          return pointBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public int getPointCount() {
        if (pointBuilder_ == null) {
          return point_.size();
        } else {
          return pointBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point getPoint(int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);
        } else {
          return pointBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder setPoint(
          int index, org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.set(index, value);
          onChanged();
        } else {
          pointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder setPoint(
          int index, org.openlca.geo.geojson.Proto.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(value);
          onChanged();
        } else {
          pointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(
          int index, org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(index, value);
          onChanged();
        } else {
          pointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(
          org.openlca.geo.geojson.Proto.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(
          int index, org.openlca.geo.geojson.Proto.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addAllPoint(
          java.lang.Iterable<? extends org.openlca.geo.geojson.Proto.Point> values) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, point_);
          onChanged();
        } else {
          pointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder removePoint(int index) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.remove(index);
          onChanged();
        } else {
          pointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point.Builder getPointBuilder(
          int index) {
        return getPointFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder(
          int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);  } else {
          return pointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public java.util.List<? extends org.openlca.geo.geojson.Proto.PointOrBuilder> 
           getPointOrBuilderList() {
        if (pointBuilder_ != null) {
          return pointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(point_);
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point.Builder addPointBuilder() {
        return getPointFieldBuilder().addBuilder(
            org.openlca.geo.geojson.Proto.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point.Builder addPointBuilder(
          int index) {
        return getPointFieldBuilder().addBuilder(
            index, org.openlca.geo.geojson.Proto.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Point.Builder> 
           getPointBuilderList() {
        return getPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder> 
          getPointFieldBuilder() {
        if (pointBuilder_ == null) {
          pointBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder>(
                  point_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          point_ = null;
        }
        return pointBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.MultiPoint)
    }

    // @@protoc_insertion_point(class_scope:geoproto.MultiPoint)
    private static final org.openlca.geo.geojson.Proto.MultiPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.MultiPoint();
    }

    public static org.openlca.geo.geojson.Proto.MultiPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiPoint>
        PARSER = new com.google.protobuf.AbstractParser<MultiPoint>() {
      @java.lang.Override
      public MultiPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiPoint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiPoint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiPoint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LineStringOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.LineString)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    java.util.List<org.openlca.geo.geojson.Proto.Point> 
        getPointList();
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    org.openlca.geo.geojson.Proto.Point getPoint(int index);
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    int getPointCount();
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    java.util.List<? extends org.openlca.geo.geojson.Proto.PointOrBuilder> 
        getPointOrBuilderList();
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code geoproto.LineString}
   */
  public static final class LineString extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.LineString)
      LineStringOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LineString.newBuilder() to construct.
    private LineString(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LineString() {
      point_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LineString();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LineString(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                point_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Point>();
                mutable_bitField0_ |= 0x00000001;
              }
              point_.add(
                  input.readMessage(org.openlca.geo.geojson.Proto.Point.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          point_ = java.util.Collections.unmodifiableList(point_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_LineString_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_LineString_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.LineString.class, org.openlca.geo.geojson.Proto.LineString.Builder.class);
    }

    public static final int POINT_FIELD_NUMBER = 1;
    private java.util.List<org.openlca.geo.geojson.Proto.Point> point_;
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.geo.geojson.Proto.Point> getPointList() {
      return point_;
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.geo.geojson.Proto.PointOrBuilder> 
        getPointOrBuilderList() {
      return point_;
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public int getPointCount() {
      return point_.size();
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Point getPoint(int index) {
      return point_.get(index);
    }
    /**
     * <code>repeated .geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder(
        int index) {
      return point_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < point_.size(); i++) {
        output.writeMessage(1, point_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < point_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, point_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.LineString)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.LineString other = (org.openlca.geo.geojson.Proto.LineString) obj;

      if (!getPointList()
          .equals(other.getPointList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPointCount() > 0) {
        hash = (37 * hash) + POINT_FIELD_NUMBER;
        hash = (53 * hash) + getPointList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.LineString parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.LineString prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.LineString}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.LineString)
        org.openlca.geo.geojson.Proto.LineStringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_LineString_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_LineString_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.LineString.class, org.openlca.geo.geojson.Proto.LineString.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.LineString.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPointFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pointBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_LineString_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.LineString getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.LineString.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.LineString build() {
        org.openlca.geo.geojson.Proto.LineString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.LineString buildPartial() {
        org.openlca.geo.geojson.Proto.LineString result = new org.openlca.geo.geojson.Proto.LineString(this);
        int from_bitField0_ = bitField0_;
        if (pointBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            point_ = java.util.Collections.unmodifiableList(point_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.point_ = point_;
        } else {
          result.point_ = pointBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.LineString) {
          return mergeFrom((org.openlca.geo.geojson.Proto.LineString)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.LineString other) {
        if (other == org.openlca.geo.geojson.Proto.LineString.getDefaultInstance()) return this;
        if (pointBuilder_ == null) {
          if (!other.point_.isEmpty()) {
            if (point_.isEmpty()) {
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePointIsMutable();
              point_.addAll(other.point_);
            }
            onChanged();
          }
        } else {
          if (!other.point_.isEmpty()) {
            if (pointBuilder_.isEmpty()) {
              pointBuilder_.dispose();
              pointBuilder_ = null;
              point_ = other.point_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pointBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPointFieldBuilder() : null;
            } else {
              pointBuilder_.addAllMessages(other.point_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.LineString parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.LineString) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.openlca.geo.geojson.Proto.Point> point_ =
        java.util.Collections.emptyList();
      private void ensurePointIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          point_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Point>(point_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder> pointBuilder_;

      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Point> getPointList() {
        if (pointBuilder_ == null) {
          return java.util.Collections.unmodifiableList(point_);
        } else {
          return pointBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public int getPointCount() {
        if (pointBuilder_ == null) {
          return point_.size();
        } else {
          return pointBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point getPoint(int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);
        } else {
          return pointBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder setPoint(
          int index, org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.set(index, value);
          onChanged();
        } else {
          pointBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder setPoint(
          int index, org.openlca.geo.geojson.Proto.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.set(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(value);
          onChanged();
        } else {
          pointBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(
          int index, org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePointIsMutable();
          point_.add(index, value);
          onChanged();
        } else {
          pointBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(
          org.openlca.geo.geojson.Proto.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addPoint(
          int index, org.openlca.geo.geojson.Proto.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.add(index, builderForValue.build());
          onChanged();
        } else {
          pointBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder addAllPoint(
          java.lang.Iterable<? extends org.openlca.geo.geojson.Proto.Point> values) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, point_);
          onChanged();
        } else {
          pointBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          point_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public Builder removePoint(int index) {
        if (pointBuilder_ == null) {
          ensurePointIsMutable();
          point_.remove(index);
          onChanged();
        } else {
          pointBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point.Builder getPointBuilder(
          int index) {
        return getPointFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder(
          int index) {
        if (pointBuilder_ == null) {
          return point_.get(index);  } else {
          return pointBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public java.util.List<? extends org.openlca.geo.geojson.Proto.PointOrBuilder> 
           getPointOrBuilderList() {
        if (pointBuilder_ != null) {
          return pointBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(point_);
        }
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point.Builder addPointBuilder() {
        return getPointFieldBuilder().addBuilder(
            org.openlca.geo.geojson.Proto.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point.Builder addPointBuilder(
          int index) {
        return getPointFieldBuilder().addBuilder(
            index, org.openlca.geo.geojson.Proto.Point.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Point point = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Point.Builder> 
           getPointBuilderList() {
        return getPointFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder> 
          getPointFieldBuilder() {
        if (pointBuilder_ == null) {
          pointBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder>(
                  point_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          point_ = null;
        }
        return pointBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.LineString)
    }

    // @@protoc_insertion_point(class_scope:geoproto.LineString)
    private static final org.openlca.geo.geojson.Proto.LineString DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.LineString();
    }

    public static org.openlca.geo.geojson.Proto.LineString getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LineString>
        PARSER = new com.google.protobuf.AbstractParser<LineString>() {
      @java.lang.Override
      public LineString parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LineString(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LineString> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LineString> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.LineString getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiLineStringOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.MultiLineString)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    java.util.List<org.openlca.geo.geojson.Proto.LineString> 
        getLineStringList();
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    org.openlca.geo.geojson.Proto.LineString getLineString(int index);
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    int getLineStringCount();
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    java.util.List<? extends org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
        getLineStringOrBuilderList();
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    org.openlca.geo.geojson.Proto.LineStringOrBuilder getLineStringOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code geoproto.MultiLineString}
   */
  public static final class MultiLineString extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.MultiLineString)
      MultiLineStringOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiLineString.newBuilder() to construct.
    private MultiLineString(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiLineString() {
      lineString_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiLineString();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiLineString(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                lineString_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.LineString>();
                mutable_bitField0_ |= 0x00000001;
              }
              lineString_.add(
                  input.readMessage(org.openlca.geo.geojson.Proto.LineString.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          lineString_ = java.util.Collections.unmodifiableList(lineString_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiLineString_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiLineString_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.MultiLineString.class, org.openlca.geo.geojson.Proto.MultiLineString.Builder.class);
    }

    public static final int LINE_STRING_FIELD_NUMBER = 1;
    private java.util.List<org.openlca.geo.geojson.Proto.LineString> lineString_;
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.geo.geojson.Proto.LineString> getLineStringList() {
      return lineString_;
    }
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
        getLineStringOrBuilderList() {
      return lineString_;
    }
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    @java.lang.Override
    public int getLineStringCount() {
      return lineString_.size();
    }
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.LineString getLineString(int index) {
      return lineString_.get(index);
    }
    /**
     * <code>repeated .geoproto.LineString line_string = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.LineStringOrBuilder getLineStringOrBuilder(
        int index) {
      return lineString_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < lineString_.size(); i++) {
        output.writeMessage(1, lineString_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < lineString_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, lineString_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.MultiLineString)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.MultiLineString other = (org.openlca.geo.geojson.Proto.MultiLineString) obj;

      if (!getLineStringList()
          .equals(other.getLineStringList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLineStringCount() > 0) {
        hash = (37 * hash) + LINE_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getLineStringList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiLineString parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.MultiLineString prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.MultiLineString}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.MultiLineString)
        org.openlca.geo.geojson.Proto.MultiLineStringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiLineString_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiLineString_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.MultiLineString.class, org.openlca.geo.geojson.Proto.MultiLineString.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.MultiLineString.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLineStringFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (lineStringBuilder_ == null) {
          lineString_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          lineStringBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiLineString_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiLineString getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiLineString build() {
        org.openlca.geo.geojson.Proto.MultiLineString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiLineString buildPartial() {
        org.openlca.geo.geojson.Proto.MultiLineString result = new org.openlca.geo.geojson.Proto.MultiLineString(this);
        int from_bitField0_ = bitField0_;
        if (lineStringBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            lineString_ = java.util.Collections.unmodifiableList(lineString_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.lineString_ = lineString_;
        } else {
          result.lineString_ = lineStringBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.MultiLineString) {
          return mergeFrom((org.openlca.geo.geojson.Proto.MultiLineString)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.MultiLineString other) {
        if (other == org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance()) return this;
        if (lineStringBuilder_ == null) {
          if (!other.lineString_.isEmpty()) {
            if (lineString_.isEmpty()) {
              lineString_ = other.lineString_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLineStringIsMutable();
              lineString_.addAll(other.lineString_);
            }
            onChanged();
          }
        } else {
          if (!other.lineString_.isEmpty()) {
            if (lineStringBuilder_.isEmpty()) {
              lineStringBuilder_.dispose();
              lineStringBuilder_ = null;
              lineString_ = other.lineString_;
              bitField0_ = (bitField0_ & ~0x00000001);
              lineStringBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLineStringFieldBuilder() : null;
            } else {
              lineStringBuilder_.addAllMessages(other.lineString_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.MultiLineString parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.MultiLineString) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.openlca.geo.geojson.Proto.LineString> lineString_ =
        java.util.Collections.emptyList();
      private void ensureLineStringIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          lineString_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.LineString>(lineString_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder> lineStringBuilder_;

      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.LineString> getLineStringList() {
        if (lineStringBuilder_ == null) {
          return java.util.Collections.unmodifiableList(lineString_);
        } else {
          return lineStringBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public int getLineStringCount() {
        if (lineStringBuilder_ == null) {
          return lineString_.size();
        } else {
          return lineStringBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString getLineString(int index) {
        if (lineStringBuilder_ == null) {
          return lineString_.get(index);
        } else {
          return lineStringBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder setLineString(
          int index, org.openlca.geo.geojson.Proto.LineString value) {
        if (lineStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineStringIsMutable();
          lineString_.set(index, value);
          onChanged();
        } else {
          lineStringBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder setLineString(
          int index, org.openlca.geo.geojson.Proto.LineString.Builder builderForValue) {
        if (lineStringBuilder_ == null) {
          ensureLineStringIsMutable();
          lineString_.set(index, builderForValue.build());
          onChanged();
        } else {
          lineStringBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder addLineString(org.openlca.geo.geojson.Proto.LineString value) {
        if (lineStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineStringIsMutable();
          lineString_.add(value);
          onChanged();
        } else {
          lineStringBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder addLineString(
          int index, org.openlca.geo.geojson.Proto.LineString value) {
        if (lineStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLineStringIsMutable();
          lineString_.add(index, value);
          onChanged();
        } else {
          lineStringBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder addLineString(
          org.openlca.geo.geojson.Proto.LineString.Builder builderForValue) {
        if (lineStringBuilder_ == null) {
          ensureLineStringIsMutable();
          lineString_.add(builderForValue.build());
          onChanged();
        } else {
          lineStringBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder addLineString(
          int index, org.openlca.geo.geojson.Proto.LineString.Builder builderForValue) {
        if (lineStringBuilder_ == null) {
          ensureLineStringIsMutable();
          lineString_.add(index, builderForValue.build());
          onChanged();
        } else {
          lineStringBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder addAllLineString(
          java.lang.Iterable<? extends org.openlca.geo.geojson.Proto.LineString> values) {
        if (lineStringBuilder_ == null) {
          ensureLineStringIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lineString_);
          onChanged();
        } else {
          lineStringBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder clearLineString() {
        if (lineStringBuilder_ == null) {
          lineString_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          lineStringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public Builder removeLineString(int index) {
        if (lineStringBuilder_ == null) {
          ensureLineStringIsMutable();
          lineString_.remove(index);
          onChanged();
        } else {
          lineStringBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString.Builder getLineStringBuilder(
          int index) {
        return getLineStringFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineStringOrBuilder getLineStringOrBuilder(
          int index) {
        if (lineStringBuilder_ == null) {
          return lineString_.get(index);  } else {
          return lineStringBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public java.util.List<? extends org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
           getLineStringOrBuilderList() {
        if (lineStringBuilder_ != null) {
          return lineStringBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(lineString_);
        }
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString.Builder addLineStringBuilder() {
        return getLineStringFieldBuilder().addBuilder(
            org.openlca.geo.geojson.Proto.LineString.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString.Builder addLineStringBuilder(
          int index) {
        return getLineStringFieldBuilder().addBuilder(
            index, org.openlca.geo.geojson.Proto.LineString.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.LineString line_string = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.LineString.Builder> 
           getLineStringBuilderList() {
        return getLineStringFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
          getLineStringFieldBuilder() {
        if (lineStringBuilder_ == null) {
          lineStringBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder>(
                  lineString_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          lineString_ = null;
        }
        return lineStringBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.MultiLineString)
    }

    // @@protoc_insertion_point(class_scope:geoproto.MultiLineString)
    private static final org.openlca.geo.geojson.Proto.MultiLineString DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.MultiLineString();
    }

    public static org.openlca.geo.geojson.Proto.MultiLineString getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiLineString>
        PARSER = new com.google.protobuf.AbstractParser<MultiLineString>() {
      @java.lang.Override
      public MultiLineString parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiLineString(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiLineString> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiLineString> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiLineString getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PolygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.Polygon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    java.util.List<org.openlca.geo.geojson.Proto.LineString> 
        getRingList();
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    org.openlca.geo.geojson.Proto.LineString getRing(int index);
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    int getRingCount();
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    java.util.List<? extends org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
        getRingOrBuilderList();
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    org.openlca.geo.geojson.Proto.LineStringOrBuilder getRingOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code geoproto.Polygon}
   */
  public static final class Polygon extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.Polygon)
      PolygonOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Polygon.newBuilder() to construct.
    private Polygon(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Polygon() {
      ring_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Polygon();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Polygon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                ring_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.LineString>();
                mutable_bitField0_ |= 0x00000001;
              }
              ring_.add(
                  input.readMessage(org.openlca.geo.geojson.Proto.LineString.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          ring_ = java.util.Collections.unmodifiableList(ring_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Polygon_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Polygon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.Polygon.class, org.openlca.geo.geojson.Proto.Polygon.Builder.class);
    }

    public static final int RING_FIELD_NUMBER = 1;
    private java.util.List<org.openlca.geo.geojson.Proto.LineString> ring_;
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.geo.geojson.Proto.LineString> getRingList() {
      return ring_;
    }
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
        getRingOrBuilderList() {
      return ring_;
    }
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    @java.lang.Override
    public int getRingCount() {
      return ring_.size();
    }
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.LineString getRing(int index) {
      return ring_.get(index);
    }
    /**
     * <code>repeated .geoproto.LineString ring = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.LineStringOrBuilder getRingOrBuilder(
        int index) {
      return ring_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < ring_.size(); i++) {
        output.writeMessage(1, ring_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ring_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ring_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.Polygon)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.Polygon other = (org.openlca.geo.geojson.Proto.Polygon) obj;

      if (!getRingList()
          .equals(other.getRingList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRingCount() > 0) {
        hash = (37 * hash) + RING_FIELD_NUMBER;
        hash = (53 * hash) + getRingList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Polygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.Polygon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.Polygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.Polygon)
        org.openlca.geo.geojson.Proto.PolygonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Polygon_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Polygon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.Polygon.class, org.openlca.geo.geojson.Proto.Polygon.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.Polygon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRingFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (ringBuilder_ == null) {
          ring_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ringBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Polygon_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Polygon getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Polygon build() {
        org.openlca.geo.geojson.Proto.Polygon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Polygon buildPartial() {
        org.openlca.geo.geojson.Proto.Polygon result = new org.openlca.geo.geojson.Proto.Polygon(this);
        int from_bitField0_ = bitField0_;
        if (ringBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            ring_ = java.util.Collections.unmodifiableList(ring_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ring_ = ring_;
        } else {
          result.ring_ = ringBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.Polygon) {
          return mergeFrom((org.openlca.geo.geojson.Proto.Polygon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.Polygon other) {
        if (other == org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance()) return this;
        if (ringBuilder_ == null) {
          if (!other.ring_.isEmpty()) {
            if (ring_.isEmpty()) {
              ring_ = other.ring_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRingIsMutable();
              ring_.addAll(other.ring_);
            }
            onChanged();
          }
        } else {
          if (!other.ring_.isEmpty()) {
            if (ringBuilder_.isEmpty()) {
              ringBuilder_.dispose();
              ringBuilder_ = null;
              ring_ = other.ring_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ringBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRingFieldBuilder() : null;
            } else {
              ringBuilder_.addAllMessages(other.ring_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.Polygon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.Polygon) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.openlca.geo.geojson.Proto.LineString> ring_ =
        java.util.Collections.emptyList();
      private void ensureRingIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ring_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.LineString>(ring_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder> ringBuilder_;

      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.LineString> getRingList() {
        if (ringBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ring_);
        } else {
          return ringBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public int getRingCount() {
        if (ringBuilder_ == null) {
          return ring_.size();
        } else {
          return ringBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString getRing(int index) {
        if (ringBuilder_ == null) {
          return ring_.get(index);
        } else {
          return ringBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder setRing(
          int index, org.openlca.geo.geojson.Proto.LineString value) {
        if (ringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRingIsMutable();
          ring_.set(index, value);
          onChanged();
        } else {
          ringBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder setRing(
          int index, org.openlca.geo.geojson.Proto.LineString.Builder builderForValue) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.set(index, builderForValue.build());
          onChanged();
        } else {
          ringBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder addRing(org.openlca.geo.geojson.Proto.LineString value) {
        if (ringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRingIsMutable();
          ring_.add(value);
          onChanged();
        } else {
          ringBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder addRing(
          int index, org.openlca.geo.geojson.Proto.LineString value) {
        if (ringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRingIsMutable();
          ring_.add(index, value);
          onChanged();
        } else {
          ringBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder addRing(
          org.openlca.geo.geojson.Proto.LineString.Builder builderForValue) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.add(builderForValue.build());
          onChanged();
        } else {
          ringBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder addRing(
          int index, org.openlca.geo.geojson.Proto.LineString.Builder builderForValue) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.add(index, builderForValue.build());
          onChanged();
        } else {
          ringBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder addAllRing(
          java.lang.Iterable<? extends org.openlca.geo.geojson.Proto.LineString> values) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ring_);
          onChanged();
        } else {
          ringBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder clearRing() {
        if (ringBuilder_ == null) {
          ring_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public Builder removeRing(int index) {
        if (ringBuilder_ == null) {
          ensureRingIsMutable();
          ring_.remove(index);
          onChanged();
        } else {
          ringBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString.Builder getRingBuilder(
          int index) {
        return getRingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineStringOrBuilder getRingOrBuilder(
          int index) {
        if (ringBuilder_ == null) {
          return ring_.get(index);  } else {
          return ringBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public java.util.List<? extends org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
           getRingOrBuilderList() {
        if (ringBuilder_ != null) {
          return ringBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ring_);
        }
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString.Builder addRingBuilder() {
        return getRingFieldBuilder().addBuilder(
            org.openlca.geo.geojson.Proto.LineString.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString.Builder addRingBuilder(
          int index) {
        return getRingFieldBuilder().addBuilder(
            index, org.openlca.geo.geojson.Proto.LineString.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.LineString ring = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.LineString.Builder> 
           getRingBuilderList() {
        return getRingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
          getRingFieldBuilder() {
        if (ringBuilder_ == null) {
          ringBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder>(
                  ring_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          ring_ = null;
        }
        return ringBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.Polygon)
    }

    // @@protoc_insertion_point(class_scope:geoproto.Polygon)
    private static final org.openlca.geo.geojson.Proto.Polygon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.Polygon();
    }

    public static org.openlca.geo.geojson.Proto.Polygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Polygon>
        PARSER = new com.google.protobuf.AbstractParser<Polygon>() {
      @java.lang.Override
      public Polygon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Polygon(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Polygon> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Polygon> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Polygon getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiPolygonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.MultiPolygon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    java.util.List<org.openlca.geo.geojson.Proto.Polygon> 
        getPolygonList();
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    org.openlca.geo.geojson.Proto.Polygon getPolygon(int index);
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    int getPolygonCount();
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    java.util.List<? extends org.openlca.geo.geojson.Proto.PolygonOrBuilder> 
        getPolygonOrBuilderList();
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    org.openlca.geo.geojson.Proto.PolygonOrBuilder getPolygonOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code geoproto.MultiPolygon}
   */
  public static final class MultiPolygon extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.MultiPolygon)
      MultiPolygonOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiPolygon.newBuilder() to construct.
    private MultiPolygon(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiPolygon() {
      polygon_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiPolygon();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultiPolygon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                polygon_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Polygon>();
                mutable_bitField0_ |= 0x00000001;
              }
              polygon_.add(
                  input.readMessage(org.openlca.geo.geojson.Proto.Polygon.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          polygon_ = java.util.Collections.unmodifiableList(polygon_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPolygon_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPolygon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.MultiPolygon.class, org.openlca.geo.geojson.Proto.MultiPolygon.Builder.class);
    }

    public static final int POLYGON_FIELD_NUMBER = 1;
    private java.util.List<org.openlca.geo.geojson.Proto.Polygon> polygon_;
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.geo.geojson.Proto.Polygon> getPolygonList() {
      return polygon_;
    }
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.geo.geojson.Proto.PolygonOrBuilder> 
        getPolygonOrBuilderList() {
      return polygon_;
    }
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    @java.lang.Override
    public int getPolygonCount() {
      return polygon_.size();
    }
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Polygon getPolygon(int index) {
      return polygon_.get(index);
    }
    /**
     * <code>repeated .geoproto.Polygon polygon = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.PolygonOrBuilder getPolygonOrBuilder(
        int index) {
      return polygon_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < polygon_.size(); i++) {
        output.writeMessage(1, polygon_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < polygon_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, polygon_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.MultiPolygon)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.MultiPolygon other = (org.openlca.geo.geojson.Proto.MultiPolygon) obj;

      if (!getPolygonList()
          .equals(other.getPolygonList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPolygonCount() > 0) {
        hash = (37 * hash) + POLYGON_FIELD_NUMBER;
        hash = (53 * hash) + getPolygonList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.MultiPolygon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.MultiPolygon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.MultiPolygon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.MultiPolygon)
        org.openlca.geo.geojson.Proto.MultiPolygonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPolygon_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPolygon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.MultiPolygon.class, org.openlca.geo.geojson.Proto.MultiPolygon.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.MultiPolygon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPolygonFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (polygonBuilder_ == null) {
          polygon_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          polygonBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_MultiPolygon_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPolygon getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPolygon build() {
        org.openlca.geo.geojson.Proto.MultiPolygon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPolygon buildPartial() {
        org.openlca.geo.geojson.Proto.MultiPolygon result = new org.openlca.geo.geojson.Proto.MultiPolygon(this);
        int from_bitField0_ = bitField0_;
        if (polygonBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            polygon_ = java.util.Collections.unmodifiableList(polygon_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.polygon_ = polygon_;
        } else {
          result.polygon_ = polygonBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.MultiPolygon) {
          return mergeFrom((org.openlca.geo.geojson.Proto.MultiPolygon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.MultiPolygon other) {
        if (other == org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance()) return this;
        if (polygonBuilder_ == null) {
          if (!other.polygon_.isEmpty()) {
            if (polygon_.isEmpty()) {
              polygon_ = other.polygon_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePolygonIsMutable();
              polygon_.addAll(other.polygon_);
            }
            onChanged();
          }
        } else {
          if (!other.polygon_.isEmpty()) {
            if (polygonBuilder_.isEmpty()) {
              polygonBuilder_.dispose();
              polygonBuilder_ = null;
              polygon_ = other.polygon_;
              bitField0_ = (bitField0_ & ~0x00000001);
              polygonBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPolygonFieldBuilder() : null;
            } else {
              polygonBuilder_.addAllMessages(other.polygon_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.MultiPolygon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.MultiPolygon) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.openlca.geo.geojson.Proto.Polygon> polygon_ =
        java.util.Collections.emptyList();
      private void ensurePolygonIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          polygon_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Polygon>(polygon_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Polygon, org.openlca.geo.geojson.Proto.Polygon.Builder, org.openlca.geo.geojson.Proto.PolygonOrBuilder> polygonBuilder_;

      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Polygon> getPolygonList() {
        if (polygonBuilder_ == null) {
          return java.util.Collections.unmodifiableList(polygon_);
        } else {
          return polygonBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public int getPolygonCount() {
        if (polygonBuilder_ == null) {
          return polygon_.size();
        } else {
          return polygonBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Polygon getPolygon(int index) {
        if (polygonBuilder_ == null) {
          return polygon_.get(index);
        } else {
          return polygonBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder setPolygon(
          int index, org.openlca.geo.geojson.Proto.Polygon value) {
        if (polygonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonIsMutable();
          polygon_.set(index, value);
          onChanged();
        } else {
          polygonBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder setPolygon(
          int index, org.openlca.geo.geojson.Proto.Polygon.Builder builderForValue) {
        if (polygonBuilder_ == null) {
          ensurePolygonIsMutable();
          polygon_.set(index, builderForValue.build());
          onChanged();
        } else {
          polygonBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder addPolygon(org.openlca.geo.geojson.Proto.Polygon value) {
        if (polygonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonIsMutable();
          polygon_.add(value);
          onChanged();
        } else {
          polygonBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder addPolygon(
          int index, org.openlca.geo.geojson.Proto.Polygon value) {
        if (polygonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePolygonIsMutable();
          polygon_.add(index, value);
          onChanged();
        } else {
          polygonBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder addPolygon(
          org.openlca.geo.geojson.Proto.Polygon.Builder builderForValue) {
        if (polygonBuilder_ == null) {
          ensurePolygonIsMutable();
          polygon_.add(builderForValue.build());
          onChanged();
        } else {
          polygonBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder addPolygon(
          int index, org.openlca.geo.geojson.Proto.Polygon.Builder builderForValue) {
        if (polygonBuilder_ == null) {
          ensurePolygonIsMutable();
          polygon_.add(index, builderForValue.build());
          onChanged();
        } else {
          polygonBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder addAllPolygon(
          java.lang.Iterable<? extends org.openlca.geo.geojson.Proto.Polygon> values) {
        if (polygonBuilder_ == null) {
          ensurePolygonIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, polygon_);
          onChanged();
        } else {
          polygonBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder clearPolygon() {
        if (polygonBuilder_ == null) {
          polygon_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          polygonBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public Builder removePolygon(int index) {
        if (polygonBuilder_ == null) {
          ensurePolygonIsMutable();
          polygon_.remove(index);
          onChanged();
        } else {
          polygonBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Polygon.Builder getPolygonBuilder(
          int index) {
        return getPolygonFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.PolygonOrBuilder getPolygonOrBuilder(
          int index) {
        if (polygonBuilder_ == null) {
          return polygon_.get(index);  } else {
          return polygonBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public java.util.List<? extends org.openlca.geo.geojson.Proto.PolygonOrBuilder> 
           getPolygonOrBuilderList() {
        if (polygonBuilder_ != null) {
          return polygonBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(polygon_);
        }
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Polygon.Builder addPolygonBuilder() {
        return getPolygonFieldBuilder().addBuilder(
            org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Polygon.Builder addPolygonBuilder(
          int index) {
        return getPolygonFieldBuilder().addBuilder(
            index, org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Polygon polygon = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Polygon.Builder> 
           getPolygonBuilderList() {
        return getPolygonFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Polygon, org.openlca.geo.geojson.Proto.Polygon.Builder, org.openlca.geo.geojson.Proto.PolygonOrBuilder> 
          getPolygonFieldBuilder() {
        if (polygonBuilder_ == null) {
          polygonBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Polygon, org.openlca.geo.geojson.Proto.Polygon.Builder, org.openlca.geo.geojson.Proto.PolygonOrBuilder>(
                  polygon_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          polygon_ = null;
        }
        return polygonBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.MultiPolygon)
    }

    // @@protoc_insertion_point(class_scope:geoproto.MultiPolygon)
    private static final org.openlca.geo.geojson.Proto.MultiPolygon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.MultiPolygon();
    }

    public static org.openlca.geo.geojson.Proto.MultiPolygon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiPolygon>
        PARSER = new com.google.protobuf.AbstractParser<MultiPolygon>() {
      @java.lang.Override
      public MultiPolygon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultiPolygon(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultiPolygon> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiPolygon> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiPolygon getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GeometryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.Geometry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.geoproto.Point point = 1;</code>
     * @return Whether the point field is set.
     */
    boolean hasPoint();
    /**
     * <code>.geoproto.Point point = 1;</code>
     * @return The point.
     */
    org.openlca.geo.geojson.Proto.Point getPoint();
    /**
     * <code>.geoproto.Point point = 1;</code>
     */
    org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder();

    /**
     * <code>.geoproto.MultiPoint multi_point = 2;</code>
     * @return Whether the multiPoint field is set.
     */
    boolean hasMultiPoint();
    /**
     * <code>.geoproto.MultiPoint multi_point = 2;</code>
     * @return The multiPoint.
     */
    org.openlca.geo.geojson.Proto.MultiPoint getMultiPoint();
    /**
     * <code>.geoproto.MultiPoint multi_point = 2;</code>
     */
    org.openlca.geo.geojson.Proto.MultiPointOrBuilder getMultiPointOrBuilder();

    /**
     * <code>.geoproto.LineString line_string = 3;</code>
     * @return Whether the lineString field is set.
     */
    boolean hasLineString();
    /**
     * <code>.geoproto.LineString line_string = 3;</code>
     * @return The lineString.
     */
    org.openlca.geo.geojson.Proto.LineString getLineString();
    /**
     * <code>.geoproto.LineString line_string = 3;</code>
     */
    org.openlca.geo.geojson.Proto.LineStringOrBuilder getLineStringOrBuilder();

    /**
     * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
     * @return Whether the multiLineString field is set.
     */
    boolean hasMultiLineString();
    /**
     * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
     * @return The multiLineString.
     */
    org.openlca.geo.geojson.Proto.MultiLineString getMultiLineString();
    /**
     * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
     */
    org.openlca.geo.geojson.Proto.MultiLineStringOrBuilder getMultiLineStringOrBuilder();

    /**
     * <code>.geoproto.Polygon polygon = 5;</code>
     * @return Whether the polygon field is set.
     */
    boolean hasPolygon();
    /**
     * <code>.geoproto.Polygon polygon = 5;</code>
     * @return The polygon.
     */
    org.openlca.geo.geojson.Proto.Polygon getPolygon();
    /**
     * <code>.geoproto.Polygon polygon = 5;</code>
     */
    org.openlca.geo.geojson.Proto.PolygonOrBuilder getPolygonOrBuilder();

    /**
     * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
     * @return Whether the multiPolygon field is set.
     */
    boolean hasMultiPolygon();
    /**
     * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
     * @return The multiPolygon.
     */
    org.openlca.geo.geojson.Proto.MultiPolygon getMultiPolygon();
    /**
     * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
     */
    org.openlca.geo.geojson.Proto.MultiPolygonOrBuilder getMultiPolygonOrBuilder();

    /**
     * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
     * @return Whether the geometryCollection field is set.
     */
    boolean hasGeometryCollection();
    /**
     * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
     * @return The geometryCollection.
     */
    org.openlca.geo.geojson.Proto.GeometryCollection getGeometryCollection();
    /**
     * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
     */
    org.openlca.geo.geojson.Proto.GeometryCollectionOrBuilder getGeometryCollectionOrBuilder();

    public org.openlca.geo.geojson.Proto.Geometry.GeometryCase getGeometryCase();
  }
  /**
   * Protobuf type {@code geoproto.Geometry}
   */
  public static final class Geometry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.Geometry)
      GeometryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Geometry.newBuilder() to construct.
    private Geometry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Geometry() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Geometry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Geometry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.openlca.geo.geojson.Proto.Point.Builder subBuilder = null;
              if (geometryCase_ == 1) {
                subBuilder = ((org.openlca.geo.geojson.Proto.Point) geometry_).toBuilder();
              }
              geometry_ =
                  input.readMessage(org.openlca.geo.geojson.Proto.Point.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.openlca.geo.geojson.Proto.Point) geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              geometryCase_ = 1;
              break;
            }
            case 18: {
              org.openlca.geo.geojson.Proto.MultiPoint.Builder subBuilder = null;
              if (geometryCase_ == 2) {
                subBuilder = ((org.openlca.geo.geojson.Proto.MultiPoint) geometry_).toBuilder();
              }
              geometry_ =
                  input.readMessage(org.openlca.geo.geojson.Proto.MultiPoint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.openlca.geo.geojson.Proto.MultiPoint) geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              geometryCase_ = 2;
              break;
            }
            case 26: {
              org.openlca.geo.geojson.Proto.LineString.Builder subBuilder = null;
              if (geometryCase_ == 3) {
                subBuilder = ((org.openlca.geo.geojson.Proto.LineString) geometry_).toBuilder();
              }
              geometry_ =
                  input.readMessage(org.openlca.geo.geojson.Proto.LineString.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.openlca.geo.geojson.Proto.LineString) geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              geometryCase_ = 3;
              break;
            }
            case 34: {
              org.openlca.geo.geojson.Proto.MultiLineString.Builder subBuilder = null;
              if (geometryCase_ == 4) {
                subBuilder = ((org.openlca.geo.geojson.Proto.MultiLineString) geometry_).toBuilder();
              }
              geometry_ =
                  input.readMessage(org.openlca.geo.geojson.Proto.MultiLineString.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.openlca.geo.geojson.Proto.MultiLineString) geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              geometryCase_ = 4;
              break;
            }
            case 42: {
              org.openlca.geo.geojson.Proto.Polygon.Builder subBuilder = null;
              if (geometryCase_ == 5) {
                subBuilder = ((org.openlca.geo.geojson.Proto.Polygon) geometry_).toBuilder();
              }
              geometry_ =
                  input.readMessage(org.openlca.geo.geojson.Proto.Polygon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.openlca.geo.geojson.Proto.Polygon) geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              geometryCase_ = 5;
              break;
            }
            case 50: {
              org.openlca.geo.geojson.Proto.MultiPolygon.Builder subBuilder = null;
              if (geometryCase_ == 6) {
                subBuilder = ((org.openlca.geo.geojson.Proto.MultiPolygon) geometry_).toBuilder();
              }
              geometry_ =
                  input.readMessage(org.openlca.geo.geojson.Proto.MultiPolygon.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.openlca.geo.geojson.Proto.MultiPolygon) geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              geometryCase_ = 6;
              break;
            }
            case 58: {
              org.openlca.geo.geojson.Proto.GeometryCollection.Builder subBuilder = null;
              if (geometryCase_ == 7) {
                subBuilder = ((org.openlca.geo.geojson.Proto.GeometryCollection) geometry_).toBuilder();
              }
              geometry_ =
                  input.readMessage(org.openlca.geo.geojson.Proto.GeometryCollection.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.openlca.geo.geojson.Proto.GeometryCollection) geometry_);
                geometry_ = subBuilder.buildPartial();
              }
              geometryCase_ = 7;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Geometry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Geometry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.Geometry.class, org.openlca.geo.geojson.Proto.Geometry.Builder.class);
    }

    private int geometryCase_ = 0;
    private java.lang.Object geometry_;
    public enum GeometryCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      POINT(1),
      MULTI_POINT(2),
      LINE_STRING(3),
      MULTI_LINE_STRING(4),
      POLYGON(5),
      MULTI_POLYGON(6),
      GEOMETRY_COLLECTION(7),
      GEOMETRY_NOT_SET(0);
      private final int value;
      private GeometryCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GeometryCase valueOf(int value) {
        return forNumber(value);
      }

      public static GeometryCase forNumber(int value) {
        switch (value) {
          case 1: return POINT;
          case 2: return MULTI_POINT;
          case 3: return LINE_STRING;
          case 4: return MULTI_LINE_STRING;
          case 5: return POLYGON;
          case 6: return MULTI_POLYGON;
          case 7: return GEOMETRY_COLLECTION;
          case 0: return GEOMETRY_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public GeometryCase
    getGeometryCase() {
      return GeometryCase.forNumber(
          geometryCase_);
    }

    public static final int POINT_FIELD_NUMBER = 1;
    /**
     * <code>.geoproto.Point point = 1;</code>
     * @return Whether the point field is set.
     */
    @java.lang.Override
    public boolean hasPoint() {
      return geometryCase_ == 1;
    }
    /**
     * <code>.geoproto.Point point = 1;</code>
     * @return The point.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Point getPoint() {
      if (geometryCase_ == 1) {
         return (org.openlca.geo.geojson.Proto.Point) geometry_;
      }
      return org.openlca.geo.geojson.Proto.Point.getDefaultInstance();
    }
    /**
     * <code>.geoproto.Point point = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder() {
      if (geometryCase_ == 1) {
         return (org.openlca.geo.geojson.Proto.Point) geometry_;
      }
      return org.openlca.geo.geojson.Proto.Point.getDefaultInstance();
    }

    public static final int MULTI_POINT_FIELD_NUMBER = 2;
    /**
     * <code>.geoproto.MultiPoint multi_point = 2;</code>
     * @return Whether the multiPoint field is set.
     */
    @java.lang.Override
    public boolean hasMultiPoint() {
      return geometryCase_ == 2;
    }
    /**
     * <code>.geoproto.MultiPoint multi_point = 2;</code>
     * @return The multiPoint.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiPoint getMultiPoint() {
      if (geometryCase_ == 2) {
         return (org.openlca.geo.geojson.Proto.MultiPoint) geometry_;
      }
      return org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance();
    }
    /**
     * <code>.geoproto.MultiPoint multi_point = 2;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiPointOrBuilder getMultiPointOrBuilder() {
      if (geometryCase_ == 2) {
         return (org.openlca.geo.geojson.Proto.MultiPoint) geometry_;
      }
      return org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance();
    }

    public static final int LINE_STRING_FIELD_NUMBER = 3;
    /**
     * <code>.geoproto.LineString line_string = 3;</code>
     * @return Whether the lineString field is set.
     */
    @java.lang.Override
    public boolean hasLineString() {
      return geometryCase_ == 3;
    }
    /**
     * <code>.geoproto.LineString line_string = 3;</code>
     * @return The lineString.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.LineString getLineString() {
      if (geometryCase_ == 3) {
         return (org.openlca.geo.geojson.Proto.LineString) geometry_;
      }
      return org.openlca.geo.geojson.Proto.LineString.getDefaultInstance();
    }
    /**
     * <code>.geoproto.LineString line_string = 3;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.LineStringOrBuilder getLineStringOrBuilder() {
      if (geometryCase_ == 3) {
         return (org.openlca.geo.geojson.Proto.LineString) geometry_;
      }
      return org.openlca.geo.geojson.Proto.LineString.getDefaultInstance();
    }

    public static final int MULTI_LINE_STRING_FIELD_NUMBER = 4;
    /**
     * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
     * @return Whether the multiLineString field is set.
     */
    @java.lang.Override
    public boolean hasMultiLineString() {
      return geometryCase_ == 4;
    }
    /**
     * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
     * @return The multiLineString.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiLineString getMultiLineString() {
      if (geometryCase_ == 4) {
         return (org.openlca.geo.geojson.Proto.MultiLineString) geometry_;
      }
      return org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance();
    }
    /**
     * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiLineStringOrBuilder getMultiLineStringOrBuilder() {
      if (geometryCase_ == 4) {
         return (org.openlca.geo.geojson.Proto.MultiLineString) geometry_;
      }
      return org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance();
    }

    public static final int POLYGON_FIELD_NUMBER = 5;
    /**
     * <code>.geoproto.Polygon polygon = 5;</code>
     * @return Whether the polygon field is set.
     */
    @java.lang.Override
    public boolean hasPolygon() {
      return geometryCase_ == 5;
    }
    /**
     * <code>.geoproto.Polygon polygon = 5;</code>
     * @return The polygon.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Polygon getPolygon() {
      if (geometryCase_ == 5) {
         return (org.openlca.geo.geojson.Proto.Polygon) geometry_;
      }
      return org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance();
    }
    /**
     * <code>.geoproto.Polygon polygon = 5;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.PolygonOrBuilder getPolygonOrBuilder() {
      if (geometryCase_ == 5) {
         return (org.openlca.geo.geojson.Proto.Polygon) geometry_;
      }
      return org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance();
    }

    public static final int MULTI_POLYGON_FIELD_NUMBER = 6;
    /**
     * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
     * @return Whether the multiPolygon field is set.
     */
    @java.lang.Override
    public boolean hasMultiPolygon() {
      return geometryCase_ == 6;
    }
    /**
     * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
     * @return The multiPolygon.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiPolygon getMultiPolygon() {
      if (geometryCase_ == 6) {
         return (org.openlca.geo.geojson.Proto.MultiPolygon) geometry_;
      }
      return org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance();
    }
    /**
     * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.MultiPolygonOrBuilder getMultiPolygonOrBuilder() {
      if (geometryCase_ == 6) {
         return (org.openlca.geo.geojson.Proto.MultiPolygon) geometry_;
      }
      return org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance();
    }

    public static final int GEOMETRY_COLLECTION_FIELD_NUMBER = 7;
    /**
     * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
     * @return Whether the geometryCollection field is set.
     */
    @java.lang.Override
    public boolean hasGeometryCollection() {
      return geometryCase_ == 7;
    }
    /**
     * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
     * @return The geometryCollection.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.GeometryCollection getGeometryCollection() {
      if (geometryCase_ == 7) {
         return (org.openlca.geo.geojson.Proto.GeometryCollection) geometry_;
      }
      return org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance();
    }
    /**
     * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.GeometryCollectionOrBuilder getGeometryCollectionOrBuilder() {
      if (geometryCase_ == 7) {
         return (org.openlca.geo.geojson.Proto.GeometryCollection) geometry_;
      }
      return org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (geometryCase_ == 1) {
        output.writeMessage(1, (org.openlca.geo.geojson.Proto.Point) geometry_);
      }
      if (geometryCase_ == 2) {
        output.writeMessage(2, (org.openlca.geo.geojson.Proto.MultiPoint) geometry_);
      }
      if (geometryCase_ == 3) {
        output.writeMessage(3, (org.openlca.geo.geojson.Proto.LineString) geometry_);
      }
      if (geometryCase_ == 4) {
        output.writeMessage(4, (org.openlca.geo.geojson.Proto.MultiLineString) geometry_);
      }
      if (geometryCase_ == 5) {
        output.writeMessage(5, (org.openlca.geo.geojson.Proto.Polygon) geometry_);
      }
      if (geometryCase_ == 6) {
        output.writeMessage(6, (org.openlca.geo.geojson.Proto.MultiPolygon) geometry_);
      }
      if (geometryCase_ == 7) {
        output.writeMessage(7, (org.openlca.geo.geojson.Proto.GeometryCollection) geometry_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (geometryCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.openlca.geo.geojson.Proto.Point) geometry_);
      }
      if (geometryCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.openlca.geo.geojson.Proto.MultiPoint) geometry_);
      }
      if (geometryCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.openlca.geo.geojson.Proto.LineString) geometry_);
      }
      if (geometryCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.openlca.geo.geojson.Proto.MultiLineString) geometry_);
      }
      if (geometryCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.openlca.geo.geojson.Proto.Polygon) geometry_);
      }
      if (geometryCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.openlca.geo.geojson.Proto.MultiPolygon) geometry_);
      }
      if (geometryCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.openlca.geo.geojson.Proto.GeometryCollection) geometry_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.Geometry)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.Geometry other = (org.openlca.geo.geojson.Proto.Geometry) obj;

      if (!getGeometryCase().equals(other.getGeometryCase())) return false;
      switch (geometryCase_) {
        case 1:
          if (!getPoint()
              .equals(other.getPoint())) return false;
          break;
        case 2:
          if (!getMultiPoint()
              .equals(other.getMultiPoint())) return false;
          break;
        case 3:
          if (!getLineString()
              .equals(other.getLineString())) return false;
          break;
        case 4:
          if (!getMultiLineString()
              .equals(other.getMultiLineString())) return false;
          break;
        case 5:
          if (!getPolygon()
              .equals(other.getPolygon())) return false;
          break;
        case 6:
          if (!getMultiPolygon()
              .equals(other.getMultiPolygon())) return false;
          break;
        case 7:
          if (!getGeometryCollection()
              .equals(other.getGeometryCollection())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (geometryCase_) {
        case 1:
          hash = (37 * hash) + POINT_FIELD_NUMBER;
          hash = (53 * hash) + getPoint().hashCode();
          break;
        case 2:
          hash = (37 * hash) + MULTI_POINT_FIELD_NUMBER;
          hash = (53 * hash) + getMultiPoint().hashCode();
          break;
        case 3:
          hash = (37 * hash) + LINE_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getLineString().hashCode();
          break;
        case 4:
          hash = (37 * hash) + MULTI_LINE_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getMultiLineString().hashCode();
          break;
        case 5:
          hash = (37 * hash) + POLYGON_FIELD_NUMBER;
          hash = (53 * hash) + getPolygon().hashCode();
          break;
        case 6:
          hash = (37 * hash) + MULTI_POLYGON_FIELD_NUMBER;
          hash = (53 * hash) + getMultiPolygon().hashCode();
          break;
        case 7:
          hash = (37 * hash) + GEOMETRY_COLLECTION_FIELD_NUMBER;
          hash = (53 * hash) + getGeometryCollection().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Geometry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.Geometry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.Geometry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.Geometry)
        org.openlca.geo.geojson.Proto.GeometryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Geometry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Geometry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.Geometry.class, org.openlca.geo.geojson.Proto.Geometry.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.Geometry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        geometryCase_ = 0;
        geometry_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Geometry_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Geometry getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.Geometry.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Geometry build() {
        org.openlca.geo.geojson.Proto.Geometry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Geometry buildPartial() {
        org.openlca.geo.geojson.Proto.Geometry result = new org.openlca.geo.geojson.Proto.Geometry(this);
        if (geometryCase_ == 1) {
          if (pointBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = pointBuilder_.build();
          }
        }
        if (geometryCase_ == 2) {
          if (multiPointBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = multiPointBuilder_.build();
          }
        }
        if (geometryCase_ == 3) {
          if (lineStringBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = lineStringBuilder_.build();
          }
        }
        if (geometryCase_ == 4) {
          if (multiLineStringBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = multiLineStringBuilder_.build();
          }
        }
        if (geometryCase_ == 5) {
          if (polygonBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = polygonBuilder_.build();
          }
        }
        if (geometryCase_ == 6) {
          if (multiPolygonBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = multiPolygonBuilder_.build();
          }
        }
        if (geometryCase_ == 7) {
          if (geometryCollectionBuilder_ == null) {
            result.geometry_ = geometry_;
          } else {
            result.geometry_ = geometryCollectionBuilder_.build();
          }
        }
        result.geometryCase_ = geometryCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.Geometry) {
          return mergeFrom((org.openlca.geo.geojson.Proto.Geometry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.Geometry other) {
        if (other == org.openlca.geo.geojson.Proto.Geometry.getDefaultInstance()) return this;
        switch (other.getGeometryCase()) {
          case POINT: {
            mergePoint(other.getPoint());
            break;
          }
          case MULTI_POINT: {
            mergeMultiPoint(other.getMultiPoint());
            break;
          }
          case LINE_STRING: {
            mergeLineString(other.getLineString());
            break;
          }
          case MULTI_LINE_STRING: {
            mergeMultiLineString(other.getMultiLineString());
            break;
          }
          case POLYGON: {
            mergePolygon(other.getPolygon());
            break;
          }
          case MULTI_POLYGON: {
            mergeMultiPolygon(other.getMultiPolygon());
            break;
          }
          case GEOMETRY_COLLECTION: {
            mergeGeometryCollection(other.getGeometryCollection());
            break;
          }
          case GEOMETRY_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.Geometry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.Geometry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int geometryCase_ = 0;
      private java.lang.Object geometry_;
      public GeometryCase
          getGeometryCase() {
        return GeometryCase.forNumber(
            geometryCase_);
      }

      public Builder clearGeometry() {
        geometryCase_ = 0;
        geometry_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder> pointBuilder_;
      /**
       * <code>.geoproto.Point point = 1;</code>
       * @return Whether the point field is set.
       */
      @java.lang.Override
      public boolean hasPoint() {
        return geometryCase_ == 1;
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       * @return The point.
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Point getPoint() {
        if (pointBuilder_ == null) {
          if (geometryCase_ == 1) {
            return (org.openlca.geo.geojson.Proto.Point) geometry_;
          }
          return org.openlca.geo.geojson.Proto.Point.getDefaultInstance();
        } else {
          if (geometryCase_ == 1) {
            return pointBuilder_.getMessage();
          }
          return org.openlca.geo.geojson.Proto.Point.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       */
      public Builder setPoint(org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          pointBuilder_.setMessage(value);
        }
        geometryCase_ = 1;
        return this;
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       */
      public Builder setPoint(
          org.openlca.geo.geojson.Proto.Point.Builder builderForValue) {
        if (pointBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          pointBuilder_.setMessage(builderForValue.build());
        }
        geometryCase_ = 1;
        return this;
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       */
      public Builder mergePoint(org.openlca.geo.geojson.Proto.Point value) {
        if (pointBuilder_ == null) {
          if (geometryCase_ == 1 &&
              geometry_ != org.openlca.geo.geojson.Proto.Point.getDefaultInstance()) {
            geometry_ = org.openlca.geo.geojson.Proto.Point.newBuilder((org.openlca.geo.geojson.Proto.Point) geometry_)
                .mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          if (geometryCase_ == 1) {
            pointBuilder_.mergeFrom(value);
          }
          pointBuilder_.setMessage(value);
        }
        geometryCase_ = 1;
        return this;
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       */
      public Builder clearPoint() {
        if (pointBuilder_ == null) {
          if (geometryCase_ == 1) {
            geometryCase_ = 0;
            geometry_ = null;
            onChanged();
          }
        } else {
          if (geometryCase_ == 1) {
            geometryCase_ = 0;
            geometry_ = null;
          }
          pointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Point.Builder getPointBuilder() {
        return getPointFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.PointOrBuilder getPointOrBuilder() {
        if ((geometryCase_ == 1) && (pointBuilder_ != null)) {
          return pointBuilder_.getMessageOrBuilder();
        } else {
          if (geometryCase_ == 1) {
            return (org.openlca.geo.geojson.Proto.Point) geometry_;
          }
          return org.openlca.geo.geojson.Proto.Point.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.Point point = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder> 
          getPointFieldBuilder() {
        if (pointBuilder_ == null) {
          if (!(geometryCase_ == 1)) {
            geometry_ = org.openlca.geo.geojson.Proto.Point.getDefaultInstance();
          }
          pointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Point, org.openlca.geo.geojson.Proto.Point.Builder, org.openlca.geo.geojson.Proto.PointOrBuilder>(
                  (org.openlca.geo.geojson.Proto.Point) geometry_,
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        geometryCase_ = 1;
        onChanged();;
        return pointBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.MultiPoint, org.openlca.geo.geojson.Proto.MultiPoint.Builder, org.openlca.geo.geojson.Proto.MultiPointOrBuilder> multiPointBuilder_;
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       * @return Whether the multiPoint field is set.
       */
      @java.lang.Override
      public boolean hasMultiPoint() {
        return geometryCase_ == 2;
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       * @return The multiPoint.
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPoint getMultiPoint() {
        if (multiPointBuilder_ == null) {
          if (geometryCase_ == 2) {
            return (org.openlca.geo.geojson.Proto.MultiPoint) geometry_;
          }
          return org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance();
        } else {
          if (geometryCase_ == 2) {
            return multiPointBuilder_.getMessage();
          }
          return org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       */
      public Builder setMultiPoint(org.openlca.geo.geojson.Proto.MultiPoint value) {
        if (multiPointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          multiPointBuilder_.setMessage(value);
        }
        geometryCase_ = 2;
        return this;
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       */
      public Builder setMultiPoint(
          org.openlca.geo.geojson.Proto.MultiPoint.Builder builderForValue) {
        if (multiPointBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          multiPointBuilder_.setMessage(builderForValue.build());
        }
        geometryCase_ = 2;
        return this;
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       */
      public Builder mergeMultiPoint(org.openlca.geo.geojson.Proto.MultiPoint value) {
        if (multiPointBuilder_ == null) {
          if (geometryCase_ == 2 &&
              geometry_ != org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance()) {
            geometry_ = org.openlca.geo.geojson.Proto.MultiPoint.newBuilder((org.openlca.geo.geojson.Proto.MultiPoint) geometry_)
                .mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          if (geometryCase_ == 2) {
            multiPointBuilder_.mergeFrom(value);
          }
          multiPointBuilder_.setMessage(value);
        }
        geometryCase_ = 2;
        return this;
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       */
      public Builder clearMultiPoint() {
        if (multiPointBuilder_ == null) {
          if (geometryCase_ == 2) {
            geometryCase_ = 0;
            geometry_ = null;
            onChanged();
          }
        } else {
          if (geometryCase_ == 2) {
            geometryCase_ = 0;
            geometry_ = null;
          }
          multiPointBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       */
      public org.openlca.geo.geojson.Proto.MultiPoint.Builder getMultiPointBuilder() {
        return getMultiPointFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPointOrBuilder getMultiPointOrBuilder() {
        if ((geometryCase_ == 2) && (multiPointBuilder_ != null)) {
          return multiPointBuilder_.getMessageOrBuilder();
        } else {
          if (geometryCase_ == 2) {
            return (org.openlca.geo.geojson.Proto.MultiPoint) geometry_;
          }
          return org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.MultiPoint multi_point = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.MultiPoint, org.openlca.geo.geojson.Proto.MultiPoint.Builder, org.openlca.geo.geojson.Proto.MultiPointOrBuilder> 
          getMultiPointFieldBuilder() {
        if (multiPointBuilder_ == null) {
          if (!(geometryCase_ == 2)) {
            geometry_ = org.openlca.geo.geojson.Proto.MultiPoint.getDefaultInstance();
          }
          multiPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.MultiPoint, org.openlca.geo.geojson.Proto.MultiPoint.Builder, org.openlca.geo.geojson.Proto.MultiPointOrBuilder>(
                  (org.openlca.geo.geojson.Proto.MultiPoint) geometry_,
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        geometryCase_ = 2;
        onChanged();;
        return multiPointBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder> lineStringBuilder_;
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       * @return Whether the lineString field is set.
       */
      @java.lang.Override
      public boolean hasLineString() {
        return geometryCase_ == 3;
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       * @return The lineString.
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.LineString getLineString() {
        if (lineStringBuilder_ == null) {
          if (geometryCase_ == 3) {
            return (org.openlca.geo.geojson.Proto.LineString) geometry_;
          }
          return org.openlca.geo.geojson.Proto.LineString.getDefaultInstance();
        } else {
          if (geometryCase_ == 3) {
            return lineStringBuilder_.getMessage();
          }
          return org.openlca.geo.geojson.Proto.LineString.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       */
      public Builder setLineString(org.openlca.geo.geojson.Proto.LineString value) {
        if (lineStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          lineStringBuilder_.setMessage(value);
        }
        geometryCase_ = 3;
        return this;
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       */
      public Builder setLineString(
          org.openlca.geo.geojson.Proto.LineString.Builder builderForValue) {
        if (lineStringBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          lineStringBuilder_.setMessage(builderForValue.build());
        }
        geometryCase_ = 3;
        return this;
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       */
      public Builder mergeLineString(org.openlca.geo.geojson.Proto.LineString value) {
        if (lineStringBuilder_ == null) {
          if (geometryCase_ == 3 &&
              geometry_ != org.openlca.geo.geojson.Proto.LineString.getDefaultInstance()) {
            geometry_ = org.openlca.geo.geojson.Proto.LineString.newBuilder((org.openlca.geo.geojson.Proto.LineString) geometry_)
                .mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          if (geometryCase_ == 3) {
            lineStringBuilder_.mergeFrom(value);
          }
          lineStringBuilder_.setMessage(value);
        }
        geometryCase_ = 3;
        return this;
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       */
      public Builder clearLineString() {
        if (lineStringBuilder_ == null) {
          if (geometryCase_ == 3) {
            geometryCase_ = 0;
            geometry_ = null;
            onChanged();
          }
        } else {
          if (geometryCase_ == 3) {
            geometryCase_ = 0;
            geometry_ = null;
          }
          lineStringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       */
      public org.openlca.geo.geojson.Proto.LineString.Builder getLineStringBuilder() {
        return getLineStringFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.LineStringOrBuilder getLineStringOrBuilder() {
        if ((geometryCase_ == 3) && (lineStringBuilder_ != null)) {
          return lineStringBuilder_.getMessageOrBuilder();
        } else {
          if (geometryCase_ == 3) {
            return (org.openlca.geo.geojson.Proto.LineString) geometry_;
          }
          return org.openlca.geo.geojson.Proto.LineString.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.LineString line_string = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder> 
          getLineStringFieldBuilder() {
        if (lineStringBuilder_ == null) {
          if (!(geometryCase_ == 3)) {
            geometry_ = org.openlca.geo.geojson.Proto.LineString.getDefaultInstance();
          }
          lineStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.LineString, org.openlca.geo.geojson.Proto.LineString.Builder, org.openlca.geo.geojson.Proto.LineStringOrBuilder>(
                  (org.openlca.geo.geojson.Proto.LineString) geometry_,
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        geometryCase_ = 3;
        onChanged();;
        return lineStringBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.MultiLineString, org.openlca.geo.geojson.Proto.MultiLineString.Builder, org.openlca.geo.geojson.Proto.MultiLineStringOrBuilder> multiLineStringBuilder_;
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       * @return Whether the multiLineString field is set.
       */
      @java.lang.Override
      public boolean hasMultiLineString() {
        return geometryCase_ == 4;
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       * @return The multiLineString.
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiLineString getMultiLineString() {
        if (multiLineStringBuilder_ == null) {
          if (geometryCase_ == 4) {
            return (org.openlca.geo.geojson.Proto.MultiLineString) geometry_;
          }
          return org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance();
        } else {
          if (geometryCase_ == 4) {
            return multiLineStringBuilder_.getMessage();
          }
          return org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       */
      public Builder setMultiLineString(org.openlca.geo.geojson.Proto.MultiLineString value) {
        if (multiLineStringBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          multiLineStringBuilder_.setMessage(value);
        }
        geometryCase_ = 4;
        return this;
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       */
      public Builder setMultiLineString(
          org.openlca.geo.geojson.Proto.MultiLineString.Builder builderForValue) {
        if (multiLineStringBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          multiLineStringBuilder_.setMessage(builderForValue.build());
        }
        geometryCase_ = 4;
        return this;
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       */
      public Builder mergeMultiLineString(org.openlca.geo.geojson.Proto.MultiLineString value) {
        if (multiLineStringBuilder_ == null) {
          if (geometryCase_ == 4 &&
              geometry_ != org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance()) {
            geometry_ = org.openlca.geo.geojson.Proto.MultiLineString.newBuilder((org.openlca.geo.geojson.Proto.MultiLineString) geometry_)
                .mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          if (geometryCase_ == 4) {
            multiLineStringBuilder_.mergeFrom(value);
          }
          multiLineStringBuilder_.setMessage(value);
        }
        geometryCase_ = 4;
        return this;
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       */
      public Builder clearMultiLineString() {
        if (multiLineStringBuilder_ == null) {
          if (geometryCase_ == 4) {
            geometryCase_ = 0;
            geometry_ = null;
            onChanged();
          }
        } else {
          if (geometryCase_ == 4) {
            geometryCase_ = 0;
            geometry_ = null;
          }
          multiLineStringBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       */
      public org.openlca.geo.geojson.Proto.MultiLineString.Builder getMultiLineStringBuilder() {
        return getMultiLineStringFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiLineStringOrBuilder getMultiLineStringOrBuilder() {
        if ((geometryCase_ == 4) && (multiLineStringBuilder_ != null)) {
          return multiLineStringBuilder_.getMessageOrBuilder();
        } else {
          if (geometryCase_ == 4) {
            return (org.openlca.geo.geojson.Proto.MultiLineString) geometry_;
          }
          return org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.MultiLineString multi_line_string = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.MultiLineString, org.openlca.geo.geojson.Proto.MultiLineString.Builder, org.openlca.geo.geojson.Proto.MultiLineStringOrBuilder> 
          getMultiLineStringFieldBuilder() {
        if (multiLineStringBuilder_ == null) {
          if (!(geometryCase_ == 4)) {
            geometry_ = org.openlca.geo.geojson.Proto.MultiLineString.getDefaultInstance();
          }
          multiLineStringBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.MultiLineString, org.openlca.geo.geojson.Proto.MultiLineString.Builder, org.openlca.geo.geojson.Proto.MultiLineStringOrBuilder>(
                  (org.openlca.geo.geojson.Proto.MultiLineString) geometry_,
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        geometryCase_ = 4;
        onChanged();;
        return multiLineStringBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Polygon, org.openlca.geo.geojson.Proto.Polygon.Builder, org.openlca.geo.geojson.Proto.PolygonOrBuilder> polygonBuilder_;
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       * @return Whether the polygon field is set.
       */
      @java.lang.Override
      public boolean hasPolygon() {
        return geometryCase_ == 5;
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       * @return The polygon.
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Polygon getPolygon() {
        if (polygonBuilder_ == null) {
          if (geometryCase_ == 5) {
            return (org.openlca.geo.geojson.Proto.Polygon) geometry_;
          }
          return org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance();
        } else {
          if (geometryCase_ == 5) {
            return polygonBuilder_.getMessage();
          }
          return org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       */
      public Builder setPolygon(org.openlca.geo.geojson.Proto.Polygon value) {
        if (polygonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          polygonBuilder_.setMessage(value);
        }
        geometryCase_ = 5;
        return this;
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       */
      public Builder setPolygon(
          org.openlca.geo.geojson.Proto.Polygon.Builder builderForValue) {
        if (polygonBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          polygonBuilder_.setMessage(builderForValue.build());
        }
        geometryCase_ = 5;
        return this;
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       */
      public Builder mergePolygon(org.openlca.geo.geojson.Proto.Polygon value) {
        if (polygonBuilder_ == null) {
          if (geometryCase_ == 5 &&
              geometry_ != org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance()) {
            geometry_ = org.openlca.geo.geojson.Proto.Polygon.newBuilder((org.openlca.geo.geojson.Proto.Polygon) geometry_)
                .mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          if (geometryCase_ == 5) {
            polygonBuilder_.mergeFrom(value);
          }
          polygonBuilder_.setMessage(value);
        }
        geometryCase_ = 5;
        return this;
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       */
      public Builder clearPolygon() {
        if (polygonBuilder_ == null) {
          if (geometryCase_ == 5) {
            geometryCase_ = 0;
            geometry_ = null;
            onChanged();
          }
        } else {
          if (geometryCase_ == 5) {
            geometryCase_ = 0;
            geometry_ = null;
          }
          polygonBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       */
      public org.openlca.geo.geojson.Proto.Polygon.Builder getPolygonBuilder() {
        return getPolygonFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.PolygonOrBuilder getPolygonOrBuilder() {
        if ((geometryCase_ == 5) && (polygonBuilder_ != null)) {
          return polygonBuilder_.getMessageOrBuilder();
        } else {
          if (geometryCase_ == 5) {
            return (org.openlca.geo.geojson.Proto.Polygon) geometry_;
          }
          return org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.Polygon polygon = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Polygon, org.openlca.geo.geojson.Proto.Polygon.Builder, org.openlca.geo.geojson.Proto.PolygonOrBuilder> 
          getPolygonFieldBuilder() {
        if (polygonBuilder_ == null) {
          if (!(geometryCase_ == 5)) {
            geometry_ = org.openlca.geo.geojson.Proto.Polygon.getDefaultInstance();
          }
          polygonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Polygon, org.openlca.geo.geojson.Proto.Polygon.Builder, org.openlca.geo.geojson.Proto.PolygonOrBuilder>(
                  (org.openlca.geo.geojson.Proto.Polygon) geometry_,
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        geometryCase_ = 5;
        onChanged();;
        return polygonBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.MultiPolygon, org.openlca.geo.geojson.Proto.MultiPolygon.Builder, org.openlca.geo.geojson.Proto.MultiPolygonOrBuilder> multiPolygonBuilder_;
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       * @return Whether the multiPolygon field is set.
       */
      @java.lang.Override
      public boolean hasMultiPolygon() {
        return geometryCase_ == 6;
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       * @return The multiPolygon.
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPolygon getMultiPolygon() {
        if (multiPolygonBuilder_ == null) {
          if (geometryCase_ == 6) {
            return (org.openlca.geo.geojson.Proto.MultiPolygon) geometry_;
          }
          return org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance();
        } else {
          if (geometryCase_ == 6) {
            return multiPolygonBuilder_.getMessage();
          }
          return org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       */
      public Builder setMultiPolygon(org.openlca.geo.geojson.Proto.MultiPolygon value) {
        if (multiPolygonBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          multiPolygonBuilder_.setMessage(value);
        }
        geometryCase_ = 6;
        return this;
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       */
      public Builder setMultiPolygon(
          org.openlca.geo.geojson.Proto.MultiPolygon.Builder builderForValue) {
        if (multiPolygonBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          multiPolygonBuilder_.setMessage(builderForValue.build());
        }
        geometryCase_ = 6;
        return this;
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       */
      public Builder mergeMultiPolygon(org.openlca.geo.geojson.Proto.MultiPolygon value) {
        if (multiPolygonBuilder_ == null) {
          if (geometryCase_ == 6 &&
              geometry_ != org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance()) {
            geometry_ = org.openlca.geo.geojson.Proto.MultiPolygon.newBuilder((org.openlca.geo.geojson.Proto.MultiPolygon) geometry_)
                .mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          if (geometryCase_ == 6) {
            multiPolygonBuilder_.mergeFrom(value);
          }
          multiPolygonBuilder_.setMessage(value);
        }
        geometryCase_ = 6;
        return this;
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       */
      public Builder clearMultiPolygon() {
        if (multiPolygonBuilder_ == null) {
          if (geometryCase_ == 6) {
            geometryCase_ = 0;
            geometry_ = null;
            onChanged();
          }
        } else {
          if (geometryCase_ == 6) {
            geometryCase_ = 0;
            geometry_ = null;
          }
          multiPolygonBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       */
      public org.openlca.geo.geojson.Proto.MultiPolygon.Builder getMultiPolygonBuilder() {
        return getMultiPolygonFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.MultiPolygonOrBuilder getMultiPolygonOrBuilder() {
        if ((geometryCase_ == 6) && (multiPolygonBuilder_ != null)) {
          return multiPolygonBuilder_.getMessageOrBuilder();
        } else {
          if (geometryCase_ == 6) {
            return (org.openlca.geo.geojson.Proto.MultiPolygon) geometry_;
          }
          return org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.MultiPolygon multi_polygon = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.MultiPolygon, org.openlca.geo.geojson.Proto.MultiPolygon.Builder, org.openlca.geo.geojson.Proto.MultiPolygonOrBuilder> 
          getMultiPolygonFieldBuilder() {
        if (multiPolygonBuilder_ == null) {
          if (!(geometryCase_ == 6)) {
            geometry_ = org.openlca.geo.geojson.Proto.MultiPolygon.getDefaultInstance();
          }
          multiPolygonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.MultiPolygon, org.openlca.geo.geojson.Proto.MultiPolygon.Builder, org.openlca.geo.geojson.Proto.MultiPolygonOrBuilder>(
                  (org.openlca.geo.geojson.Proto.MultiPolygon) geometry_,
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        geometryCase_ = 6;
        onChanged();;
        return multiPolygonBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.GeometryCollection, org.openlca.geo.geojson.Proto.GeometryCollection.Builder, org.openlca.geo.geojson.Proto.GeometryCollectionOrBuilder> geometryCollectionBuilder_;
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       * @return Whether the geometryCollection field is set.
       */
      @java.lang.Override
      public boolean hasGeometryCollection() {
        return geometryCase_ == 7;
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       * @return The geometryCollection.
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.GeometryCollection getGeometryCollection() {
        if (geometryCollectionBuilder_ == null) {
          if (geometryCase_ == 7) {
            return (org.openlca.geo.geojson.Proto.GeometryCollection) geometry_;
          }
          return org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance();
        } else {
          if (geometryCase_ == 7) {
            return geometryCollectionBuilder_.getMessage();
          }
          return org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       */
      public Builder setGeometryCollection(org.openlca.geo.geojson.Proto.GeometryCollection value) {
        if (geometryCollectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          geometryCollectionBuilder_.setMessage(value);
        }
        geometryCase_ = 7;
        return this;
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       */
      public Builder setGeometryCollection(
          org.openlca.geo.geojson.Proto.GeometryCollection.Builder builderForValue) {
        if (geometryCollectionBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          geometryCollectionBuilder_.setMessage(builderForValue.build());
        }
        geometryCase_ = 7;
        return this;
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       */
      public Builder mergeGeometryCollection(org.openlca.geo.geojson.Proto.GeometryCollection value) {
        if (geometryCollectionBuilder_ == null) {
          if (geometryCase_ == 7 &&
              geometry_ != org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance()) {
            geometry_ = org.openlca.geo.geojson.Proto.GeometryCollection.newBuilder((org.openlca.geo.geojson.Proto.GeometryCollection) geometry_)
                .mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          if (geometryCase_ == 7) {
            geometryCollectionBuilder_.mergeFrom(value);
          }
          geometryCollectionBuilder_.setMessage(value);
        }
        geometryCase_ = 7;
        return this;
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       */
      public Builder clearGeometryCollection() {
        if (geometryCollectionBuilder_ == null) {
          if (geometryCase_ == 7) {
            geometryCase_ = 0;
            geometry_ = null;
            onChanged();
          }
        } else {
          if (geometryCase_ == 7) {
            geometryCase_ = 0;
            geometry_ = null;
          }
          geometryCollectionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       */
      public org.openlca.geo.geojson.Proto.GeometryCollection.Builder getGeometryCollectionBuilder() {
        return getGeometryCollectionFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       */
      @java.lang.Override
      public org.openlca.geo.geojson.Proto.GeometryCollectionOrBuilder getGeometryCollectionOrBuilder() {
        if ((geometryCase_ == 7) && (geometryCollectionBuilder_ != null)) {
          return geometryCollectionBuilder_.getMessageOrBuilder();
        } else {
          if (geometryCase_ == 7) {
            return (org.openlca.geo.geojson.Proto.GeometryCollection) geometry_;
          }
          return org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance();
        }
      }
      /**
       * <code>.geoproto.GeometryCollection geometry_collection = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.GeometryCollection, org.openlca.geo.geojson.Proto.GeometryCollection.Builder, org.openlca.geo.geojson.Proto.GeometryCollectionOrBuilder> 
          getGeometryCollectionFieldBuilder() {
        if (geometryCollectionBuilder_ == null) {
          if (!(geometryCase_ == 7)) {
            geometry_ = org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance();
          }
          geometryCollectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.GeometryCollection, org.openlca.geo.geojson.Proto.GeometryCollection.Builder, org.openlca.geo.geojson.Proto.GeometryCollectionOrBuilder>(
                  (org.openlca.geo.geojson.Proto.GeometryCollection) geometry_,
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        geometryCase_ = 7;
        onChanged();;
        return geometryCollectionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.Geometry)
    }

    // @@protoc_insertion_point(class_scope:geoproto.Geometry)
    private static final org.openlca.geo.geojson.Proto.Geometry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.Geometry();
    }

    public static org.openlca.geo.geojson.Proto.Geometry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Geometry>
        PARSER = new com.google.protobuf.AbstractParser<Geometry>() {
      @java.lang.Override
      public Geometry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Geometry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Geometry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Geometry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Geometry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GeometryCollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.GeometryCollection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    java.util.List<org.openlca.geo.geojson.Proto.Geometry> 
        getGeometryList();
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    org.openlca.geo.geojson.Proto.Geometry getGeometry(int index);
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    int getGeometryCount();
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    java.util.List<? extends org.openlca.geo.geojson.Proto.GeometryOrBuilder> 
        getGeometryOrBuilderList();
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    org.openlca.geo.geojson.Proto.GeometryOrBuilder getGeometryOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code geoproto.GeometryCollection}
   */
  public static final class GeometryCollection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.GeometryCollection)
      GeometryCollectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GeometryCollection.newBuilder() to construct.
    private GeometryCollection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GeometryCollection() {
      geometry_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GeometryCollection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GeometryCollection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                geometry_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Geometry>();
                mutable_bitField0_ |= 0x00000001;
              }
              geometry_.add(
                  input.readMessage(org.openlca.geo.geojson.Proto.Geometry.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          geometry_ = java.util.Collections.unmodifiableList(geometry_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_GeometryCollection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_GeometryCollection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.GeometryCollection.class, org.openlca.geo.geojson.Proto.GeometryCollection.Builder.class);
    }

    public static final int GEOMETRY_FIELD_NUMBER = 1;
    private java.util.List<org.openlca.geo.geojson.Proto.Geometry> geometry_;
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.geo.geojson.Proto.Geometry> getGeometryList() {
      return geometry_;
    }
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.geo.geojson.Proto.GeometryOrBuilder> 
        getGeometryOrBuilderList() {
      return geometry_;
    }
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    @java.lang.Override
    public int getGeometryCount() {
      return geometry_.size();
    }
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Geometry getGeometry(int index) {
      return geometry_.get(index);
    }
    /**
     * <code>repeated .geoproto.Geometry geometry = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.GeometryOrBuilder getGeometryOrBuilder(
        int index) {
      return geometry_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < geometry_.size(); i++) {
        output.writeMessage(1, geometry_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < geometry_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, geometry_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.GeometryCollection)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.GeometryCollection other = (org.openlca.geo.geojson.Proto.GeometryCollection) obj;

      if (!getGeometryList()
          .equals(other.getGeometryList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getGeometryCount() > 0) {
        hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
        hash = (53 * hash) + getGeometryList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.GeometryCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.GeometryCollection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.GeometryCollection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.GeometryCollection)
        org.openlca.geo.geojson.Proto.GeometryCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_GeometryCollection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_GeometryCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.GeometryCollection.class, org.openlca.geo.geojson.Proto.GeometryCollection.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.GeometryCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getGeometryFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (geometryBuilder_ == null) {
          geometry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          geometryBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_GeometryCollection_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.GeometryCollection getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.GeometryCollection build() {
        org.openlca.geo.geojson.Proto.GeometryCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.GeometryCollection buildPartial() {
        org.openlca.geo.geojson.Proto.GeometryCollection result = new org.openlca.geo.geojson.Proto.GeometryCollection(this);
        int from_bitField0_ = bitField0_;
        if (geometryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            geometry_ = java.util.Collections.unmodifiableList(geometry_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.geometry_ = geometry_;
        } else {
          result.geometry_ = geometryBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.GeometryCollection) {
          return mergeFrom((org.openlca.geo.geojson.Proto.GeometryCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.GeometryCollection other) {
        if (other == org.openlca.geo.geojson.Proto.GeometryCollection.getDefaultInstance()) return this;
        if (geometryBuilder_ == null) {
          if (!other.geometry_.isEmpty()) {
            if (geometry_.isEmpty()) {
              geometry_ = other.geometry_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGeometryIsMutable();
              geometry_.addAll(other.geometry_);
            }
            onChanged();
          }
        } else {
          if (!other.geometry_.isEmpty()) {
            if (geometryBuilder_.isEmpty()) {
              geometryBuilder_.dispose();
              geometryBuilder_ = null;
              geometry_ = other.geometry_;
              bitField0_ = (bitField0_ & ~0x00000001);
              geometryBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGeometryFieldBuilder() : null;
            } else {
              geometryBuilder_.addAllMessages(other.geometry_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.GeometryCollection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.GeometryCollection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.openlca.geo.geojson.Proto.Geometry> geometry_ =
        java.util.Collections.emptyList();
      private void ensureGeometryIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          geometry_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Geometry>(geometry_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Geometry, org.openlca.geo.geojson.Proto.Geometry.Builder, org.openlca.geo.geojson.Proto.GeometryOrBuilder> geometryBuilder_;

      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Geometry> getGeometryList() {
        if (geometryBuilder_ == null) {
          return java.util.Collections.unmodifiableList(geometry_);
        } else {
          return geometryBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public int getGeometryCount() {
        if (geometryBuilder_ == null) {
          return geometry_.size();
        } else {
          return geometryBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Geometry getGeometry(int index) {
        if (geometryBuilder_ == null) {
          return geometry_.get(index);
        } else {
          return geometryBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder setGeometry(
          int index, org.openlca.geo.geojson.Proto.Geometry value) {
        if (geometryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeometryIsMutable();
          geometry_.set(index, value);
          onChanged();
        } else {
          geometryBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder setGeometry(
          int index, org.openlca.geo.geojson.Proto.Geometry.Builder builderForValue) {
        if (geometryBuilder_ == null) {
          ensureGeometryIsMutable();
          geometry_.set(index, builderForValue.build());
          onChanged();
        } else {
          geometryBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder addGeometry(org.openlca.geo.geojson.Proto.Geometry value) {
        if (geometryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeometryIsMutable();
          geometry_.add(value);
          onChanged();
        } else {
          geometryBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder addGeometry(
          int index, org.openlca.geo.geojson.Proto.Geometry value) {
        if (geometryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeometryIsMutable();
          geometry_.add(index, value);
          onChanged();
        } else {
          geometryBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder addGeometry(
          org.openlca.geo.geojson.Proto.Geometry.Builder builderForValue) {
        if (geometryBuilder_ == null) {
          ensureGeometryIsMutable();
          geometry_.add(builderForValue.build());
          onChanged();
        } else {
          geometryBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder addGeometry(
          int index, org.openlca.geo.geojson.Proto.Geometry.Builder builderForValue) {
        if (geometryBuilder_ == null) {
          ensureGeometryIsMutable();
          geometry_.add(index, builderForValue.build());
          onChanged();
        } else {
          geometryBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder addAllGeometry(
          java.lang.Iterable<? extends org.openlca.geo.geojson.Proto.Geometry> values) {
        if (geometryBuilder_ == null) {
          ensureGeometryIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, geometry_);
          onChanged();
        } else {
          geometryBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder clearGeometry() {
        if (geometryBuilder_ == null) {
          geometry_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          geometryBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public Builder removeGeometry(int index) {
        if (geometryBuilder_ == null) {
          ensureGeometryIsMutable();
          geometry_.remove(index);
          onChanged();
        } else {
          geometryBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Geometry.Builder getGeometryBuilder(
          int index) {
        return getGeometryFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.GeometryOrBuilder getGeometryOrBuilder(
          int index) {
        if (geometryBuilder_ == null) {
          return geometry_.get(index);  } else {
          return geometryBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public java.util.List<? extends org.openlca.geo.geojson.Proto.GeometryOrBuilder> 
           getGeometryOrBuilderList() {
        if (geometryBuilder_ != null) {
          return geometryBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(geometry_);
        }
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Geometry.Builder addGeometryBuilder() {
        return getGeometryFieldBuilder().addBuilder(
            org.openlca.geo.geojson.Proto.Geometry.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Geometry.Builder addGeometryBuilder(
          int index) {
        return getGeometryFieldBuilder().addBuilder(
            index, org.openlca.geo.geojson.Proto.Geometry.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Geometry geometry = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Geometry.Builder> 
           getGeometryBuilderList() {
        return getGeometryFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Geometry, org.openlca.geo.geojson.Proto.Geometry.Builder, org.openlca.geo.geojson.Proto.GeometryOrBuilder> 
          getGeometryFieldBuilder() {
        if (geometryBuilder_ == null) {
          geometryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Geometry, org.openlca.geo.geojson.Proto.Geometry.Builder, org.openlca.geo.geojson.Proto.GeometryOrBuilder>(
                  geometry_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        return geometryBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.GeometryCollection)
    }

    // @@protoc_insertion_point(class_scope:geoproto.GeometryCollection)
    private static final org.openlca.geo.geojson.Proto.GeometryCollection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.GeometryCollection();
    }

    public static org.openlca.geo.geojson.Proto.GeometryCollection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GeometryCollection>
        PARSER = new com.google.protobuf.AbstractParser<GeometryCollection>() {
      @java.lang.Override
      public GeometryCollection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GeometryCollection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GeometryCollection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GeometryCollection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.GeometryCollection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FeatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.Feature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.geoproto.Geometry geometry = 1;</code>
     * @return Whether the geometry field is set.
     */
    boolean hasGeometry();
    /**
     * <code>.geoproto.Geometry geometry = 1;</code>
     * @return The geometry.
     */
    org.openlca.geo.geojson.Proto.Geometry getGeometry();
    /**
     * <code>.geoproto.Geometry geometry = 1;</code>
     */
    org.openlca.geo.geojson.Proto.GeometryOrBuilder getGeometryOrBuilder();

    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */
    int getPropertiesCount();
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */
    boolean containsProperties(
        java.lang.String key);
    /**
     * Use {@link #getPropertiesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getProperties();
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getPropertiesMap();
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */

    double getPropertiesOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */

    double getPropertiesOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code geoproto.Feature}
   */
  public static final class Feature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.Feature)
      FeatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Feature.newBuilder() to construct.
    private Feature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Feature() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Feature();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Feature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.openlca.geo.geojson.Proto.Geometry.Builder subBuilder = null;
              if (geometry_ != null) {
                subBuilder = geometry_.toBuilder();
              }
              geometry_ = input.readMessage(org.openlca.geo.geojson.Proto.Geometry.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(geometry_);
                geometry_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                properties_ = com.google.protobuf.MapField.newMapField(
                    PropertiesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              properties__ = input.readMessage(
                  PropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              properties_.getMutableMap().put(
                  properties__.getKey(), properties__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Feature_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_Feature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.Feature.class, org.openlca.geo.geojson.Proto.Feature.Builder.class);
    }

    public static final int GEOMETRY_FIELD_NUMBER = 1;
    private org.openlca.geo.geojson.Proto.Geometry geometry_;
    /**
     * <code>.geoproto.Geometry geometry = 1;</code>
     * @return Whether the geometry field is set.
     */
    @java.lang.Override
    public boolean hasGeometry() {
      return geometry_ != null;
    }
    /**
     * <code>.geoproto.Geometry geometry = 1;</code>
     * @return The geometry.
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Geometry getGeometry() {
      return geometry_ == null ? org.openlca.geo.geojson.Proto.Geometry.getDefaultInstance() : geometry_;
    }
    /**
     * <code>.geoproto.Geometry geometry = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.GeometryOrBuilder getGeometryOrBuilder() {
      return getGeometry();
    }

    public static final int PROPERTIES_FIELD_NUMBER = 2;
    private static final class PropertiesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  org.openlca.geo.geojson.Proto.internal_static_geoproto_Feature_PropertiesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> properties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetProperties() {
      if (properties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PropertiesDefaultEntryHolder.defaultEntry);
      }
      return properties_;
    }

    public int getPropertiesCount() {
      return internalGetProperties().getMap().size();
    }
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */

    @java.lang.Override
    public boolean containsProperties(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPropertiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getProperties() {
      return getPropertiesMap();
    }
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Double> getPropertiesMap() {
      return internalGetProperties().getMap();
    }
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */
    @java.lang.Override

    public double getPropertiesOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, double&gt; properties = 2;</code>
     */
    @java.lang.Override

    public double getPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (geometry_ != null) {
        output.writeMessage(1, getGeometry());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetProperties(),
          PropertiesDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (geometry_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGeometry());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetProperties().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        properties__ = PropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, properties__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.Feature)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.Feature other = (org.openlca.geo.geojson.Proto.Feature) obj;

      if (hasGeometry() != other.hasGeometry()) return false;
      if (hasGeometry()) {
        if (!getGeometry()
            .equals(other.getGeometry())) return false;
      }
      if (!internalGetProperties().equals(
          other.internalGetProperties())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGeometry()) {
        hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
        hash = (53 * hash) + getGeometry().hashCode();
      }
      if (!internalGetProperties().getMap().isEmpty()) {
        hash = (37 * hash) + PROPERTIES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetProperties().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.Feature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.Feature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.Feature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.Feature)
        org.openlca.geo.geojson.Proto.FeatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Feature_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetProperties();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableProperties();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Feature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.Feature.class, org.openlca.geo.geojson.Proto.Feature.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.Feature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (geometryBuilder_ == null) {
          geometry_ = null;
        } else {
          geometry_ = null;
          geometryBuilder_ = null;
        }
        internalGetMutableProperties().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_Feature_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Feature getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.Feature.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Feature build() {
        org.openlca.geo.geojson.Proto.Feature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.Feature buildPartial() {
        org.openlca.geo.geojson.Proto.Feature result = new org.openlca.geo.geojson.Proto.Feature(this);
        int from_bitField0_ = bitField0_;
        if (geometryBuilder_ == null) {
          result.geometry_ = geometry_;
        } else {
          result.geometry_ = geometryBuilder_.build();
        }
        result.properties_ = internalGetProperties();
        result.properties_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.Feature) {
          return mergeFrom((org.openlca.geo.geojson.Proto.Feature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.Feature other) {
        if (other == org.openlca.geo.geojson.Proto.Feature.getDefaultInstance()) return this;
        if (other.hasGeometry()) {
          mergeGeometry(other.getGeometry());
        }
        internalGetMutableProperties().mergeFrom(
            other.internalGetProperties());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.Feature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.Feature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.openlca.geo.geojson.Proto.Geometry geometry_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Geometry, org.openlca.geo.geojson.Proto.Geometry.Builder, org.openlca.geo.geojson.Proto.GeometryOrBuilder> geometryBuilder_;
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       * @return Whether the geometry field is set.
       */
      public boolean hasGeometry() {
        return geometryBuilder_ != null || geometry_ != null;
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       * @return The geometry.
       */
      public org.openlca.geo.geojson.Proto.Geometry getGeometry() {
        if (geometryBuilder_ == null) {
          return geometry_ == null ? org.openlca.geo.geojson.Proto.Geometry.getDefaultInstance() : geometry_;
        } else {
          return geometryBuilder_.getMessage();
        }
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       */
      public Builder setGeometry(org.openlca.geo.geojson.Proto.Geometry value) {
        if (geometryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          geometry_ = value;
          onChanged();
        } else {
          geometryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       */
      public Builder setGeometry(
          org.openlca.geo.geojson.Proto.Geometry.Builder builderForValue) {
        if (geometryBuilder_ == null) {
          geometry_ = builderForValue.build();
          onChanged();
        } else {
          geometryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       */
      public Builder mergeGeometry(org.openlca.geo.geojson.Proto.Geometry value) {
        if (geometryBuilder_ == null) {
          if (geometry_ != null) {
            geometry_ =
              org.openlca.geo.geojson.Proto.Geometry.newBuilder(geometry_).mergeFrom(value).buildPartial();
          } else {
            geometry_ = value;
          }
          onChanged();
        } else {
          geometryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       */
      public Builder clearGeometry() {
        if (geometryBuilder_ == null) {
          geometry_ = null;
          onChanged();
        } else {
          geometry_ = null;
          geometryBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Geometry.Builder getGeometryBuilder() {
        
        onChanged();
        return getGeometryFieldBuilder().getBuilder();
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.GeometryOrBuilder getGeometryOrBuilder() {
        if (geometryBuilder_ != null) {
          return geometryBuilder_.getMessageOrBuilder();
        } else {
          return geometry_ == null ?
              org.openlca.geo.geojson.Proto.Geometry.getDefaultInstance() : geometry_;
        }
      }
      /**
       * <code>.geoproto.Geometry geometry = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Geometry, org.openlca.geo.geojson.Proto.Geometry.Builder, org.openlca.geo.geojson.Proto.GeometryOrBuilder> 
          getGeometryFieldBuilder() {
        if (geometryBuilder_ == null) {
          geometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Geometry, org.openlca.geo.geojson.Proto.Geometry.Builder, org.openlca.geo.geojson.Proto.GeometryOrBuilder>(
                  getGeometry(),
                  getParentForChildren(),
                  isClean());
          geometry_ = null;
        }
        return geometryBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> properties_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetProperties() {
        if (properties_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PropertiesDefaultEntryHolder.defaultEntry);
        }
        return properties_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetMutableProperties() {
        onChanged();;
        if (properties_ == null) {
          properties_ = com.google.protobuf.MapField.newMapField(
              PropertiesDefaultEntryHolder.defaultEntry);
        }
        if (!properties_.isMutable()) {
          properties_ = properties_.copy();
        }
        return properties_;
      }

      public int getPropertiesCount() {
        return internalGetProperties().getMap().size();
      }
      /**
       * <code>map&lt;string, double&gt; properties = 2;</code>
       */

      @java.lang.Override
      public boolean containsProperties(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetProperties().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPropertiesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getProperties() {
        return getPropertiesMap();
      }
      /**
       * <code>map&lt;string, double&gt; properties = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.Double> getPropertiesMap() {
        return internalGetProperties().getMap();
      }
      /**
       * <code>map&lt;string, double&gt; properties = 2;</code>
       */
      @java.lang.Override

      public double getPropertiesOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetProperties().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, double&gt; properties = 2;</code>
       */
      @java.lang.Override

      public double getPropertiesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetProperties().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearProperties() {
        internalGetMutableProperties().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; properties = 2;</code>
       */

      public Builder removeProperties(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableProperties().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
      getMutableProperties() {
        return internalGetMutableProperties().getMutableMap();
      }
      /**
       * <code>map&lt;string, double&gt; properties = 2;</code>
       */
      public Builder putProperties(
          java.lang.String key,
          double value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableProperties().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, double&gt; properties = 2;</code>
       */

      public Builder putAllProperties(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableProperties().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.Feature)
    }

    // @@protoc_insertion_point(class_scope:geoproto.Feature)
    private static final org.openlca.geo.geojson.Proto.Feature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.Feature();
    }

    public static org.openlca.geo.geojson.Proto.Feature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Feature>
        PARSER = new com.google.protobuf.AbstractParser<Feature>() {
      @java.lang.Override
      public Feature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Feature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Feature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Feature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Feature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FeatureCollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:geoproto.FeatureCollection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    java.util.List<org.openlca.geo.geojson.Proto.Feature> 
        getFeatureList();
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    org.openlca.geo.geojson.Proto.Feature getFeature(int index);
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    int getFeatureCount();
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    java.util.List<? extends org.openlca.geo.geojson.Proto.FeatureOrBuilder> 
        getFeatureOrBuilderList();
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    org.openlca.geo.geojson.Proto.FeatureOrBuilder getFeatureOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code geoproto.FeatureCollection}
   */
  public static final class FeatureCollection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:geoproto.FeatureCollection)
      FeatureCollectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FeatureCollection.newBuilder() to construct.
    private FeatureCollection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FeatureCollection() {
      feature_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FeatureCollection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FeatureCollection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                feature_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Feature>();
                mutable_bitField0_ |= 0x00000001;
              }
              feature_.add(
                  input.readMessage(org.openlca.geo.geojson.Proto.Feature.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          feature_ = java.util.Collections.unmodifiableList(feature_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_FeatureCollection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openlca.geo.geojson.Proto.internal_static_geoproto_FeatureCollection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openlca.geo.geojson.Proto.FeatureCollection.class, org.openlca.geo.geojson.Proto.FeatureCollection.Builder.class);
    }

    public static final int FEATURE_FIELD_NUMBER = 1;
    private java.util.List<org.openlca.geo.geojson.Proto.Feature> feature_;
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.openlca.geo.geojson.Proto.Feature> getFeatureList() {
      return feature_;
    }
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.openlca.geo.geojson.Proto.FeatureOrBuilder> 
        getFeatureOrBuilderList() {
      return feature_;
    }
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    @java.lang.Override
    public int getFeatureCount() {
      return feature_.size();
    }
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.Feature getFeature(int index) {
      return feature_.get(index);
    }
    /**
     * <code>repeated .geoproto.Feature feature = 1;</code>
     */
    @java.lang.Override
    public org.openlca.geo.geojson.Proto.FeatureOrBuilder getFeatureOrBuilder(
        int index) {
      return feature_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < feature_.size(); i++) {
        output.writeMessage(1, feature_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < feature_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, feature_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.openlca.geo.geojson.Proto.FeatureCollection)) {
        return super.equals(obj);
      }
      org.openlca.geo.geojson.Proto.FeatureCollection other = (org.openlca.geo.geojson.Proto.FeatureCollection) obj;

      if (!getFeatureList()
          .equals(other.getFeatureList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFeatureCount() > 0) {
        hash = (37 * hash) + FEATURE_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.openlca.geo.geojson.Proto.FeatureCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.openlca.geo.geojson.Proto.FeatureCollection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code geoproto.FeatureCollection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:geoproto.FeatureCollection)
        org.openlca.geo.geojson.Proto.FeatureCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_FeatureCollection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_FeatureCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.openlca.geo.geojson.Proto.FeatureCollection.class, org.openlca.geo.geojson.Proto.FeatureCollection.Builder.class);
      }

      // Construct using org.openlca.geo.geojson.Proto.FeatureCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFeatureFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (featureBuilder_ == null) {
          feature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          featureBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.openlca.geo.geojson.Proto.internal_static_geoproto_FeatureCollection_descriptor;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.FeatureCollection getDefaultInstanceForType() {
        return org.openlca.geo.geojson.Proto.FeatureCollection.getDefaultInstance();
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.FeatureCollection build() {
        org.openlca.geo.geojson.Proto.FeatureCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.openlca.geo.geojson.Proto.FeatureCollection buildPartial() {
        org.openlca.geo.geojson.Proto.FeatureCollection result = new org.openlca.geo.geojson.Proto.FeatureCollection(this);
        int from_bitField0_ = bitField0_;
        if (featureBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            feature_ = java.util.Collections.unmodifiableList(feature_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.feature_ = feature_;
        } else {
          result.feature_ = featureBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.openlca.geo.geojson.Proto.FeatureCollection) {
          return mergeFrom((org.openlca.geo.geojson.Proto.FeatureCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.openlca.geo.geojson.Proto.FeatureCollection other) {
        if (other == org.openlca.geo.geojson.Proto.FeatureCollection.getDefaultInstance()) return this;
        if (featureBuilder_ == null) {
          if (!other.feature_.isEmpty()) {
            if (feature_.isEmpty()) {
              feature_ = other.feature_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFeatureIsMutable();
              feature_.addAll(other.feature_);
            }
            onChanged();
          }
        } else {
          if (!other.feature_.isEmpty()) {
            if (featureBuilder_.isEmpty()) {
              featureBuilder_.dispose();
              featureBuilder_ = null;
              feature_ = other.feature_;
              bitField0_ = (bitField0_ & ~0x00000001);
              featureBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFeatureFieldBuilder() : null;
            } else {
              featureBuilder_.addAllMessages(other.feature_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.openlca.geo.geojson.Proto.FeatureCollection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.openlca.geo.geojson.Proto.FeatureCollection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.openlca.geo.geojson.Proto.Feature> feature_ =
        java.util.Collections.emptyList();
      private void ensureFeatureIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          feature_ = new java.util.ArrayList<org.openlca.geo.geojson.Proto.Feature>(feature_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Feature, org.openlca.geo.geojson.Proto.Feature.Builder, org.openlca.geo.geojson.Proto.FeatureOrBuilder> featureBuilder_;

      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Feature> getFeatureList() {
        if (featureBuilder_ == null) {
          return java.util.Collections.unmodifiableList(feature_);
        } else {
          return featureBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public int getFeatureCount() {
        if (featureBuilder_ == null) {
          return feature_.size();
        } else {
          return featureBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Feature getFeature(int index) {
        if (featureBuilder_ == null) {
          return feature_.get(index);
        } else {
          return featureBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder setFeature(
          int index, org.openlca.geo.geojson.Proto.Feature value) {
        if (featureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureIsMutable();
          feature_.set(index, value);
          onChanged();
        } else {
          featureBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder setFeature(
          int index, org.openlca.geo.geojson.Proto.Feature.Builder builderForValue) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.set(index, builderForValue.build());
          onChanged();
        } else {
          featureBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder addFeature(org.openlca.geo.geojson.Proto.Feature value) {
        if (featureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureIsMutable();
          feature_.add(value);
          onChanged();
        } else {
          featureBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder addFeature(
          int index, org.openlca.geo.geojson.Proto.Feature value) {
        if (featureBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeatureIsMutable();
          feature_.add(index, value);
          onChanged();
        } else {
          featureBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder addFeature(
          org.openlca.geo.geojson.Proto.Feature.Builder builderForValue) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.add(builderForValue.build());
          onChanged();
        } else {
          featureBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder addFeature(
          int index, org.openlca.geo.geojson.Proto.Feature.Builder builderForValue) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.add(index, builderForValue.build());
          onChanged();
        } else {
          featureBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder addAllFeature(
          java.lang.Iterable<? extends org.openlca.geo.geojson.Proto.Feature> values) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, feature_);
          onChanged();
        } else {
          featureBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder clearFeature() {
        if (featureBuilder_ == null) {
          feature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          featureBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public Builder removeFeature(int index) {
        if (featureBuilder_ == null) {
          ensureFeatureIsMutable();
          feature_.remove(index);
          onChanged();
        } else {
          featureBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Feature.Builder getFeatureBuilder(
          int index) {
        return getFeatureFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.FeatureOrBuilder getFeatureOrBuilder(
          int index) {
        if (featureBuilder_ == null) {
          return feature_.get(index);  } else {
          return featureBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public java.util.List<? extends org.openlca.geo.geojson.Proto.FeatureOrBuilder> 
           getFeatureOrBuilderList() {
        if (featureBuilder_ != null) {
          return featureBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(feature_);
        }
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Feature.Builder addFeatureBuilder() {
        return getFeatureFieldBuilder().addBuilder(
            org.openlca.geo.geojson.Proto.Feature.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public org.openlca.geo.geojson.Proto.Feature.Builder addFeatureBuilder(
          int index) {
        return getFeatureFieldBuilder().addBuilder(
            index, org.openlca.geo.geojson.Proto.Feature.getDefaultInstance());
      }
      /**
       * <code>repeated .geoproto.Feature feature = 1;</code>
       */
      public java.util.List<org.openlca.geo.geojson.Proto.Feature.Builder> 
           getFeatureBuilderList() {
        return getFeatureFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.openlca.geo.geojson.Proto.Feature, org.openlca.geo.geojson.Proto.Feature.Builder, org.openlca.geo.geojson.Proto.FeatureOrBuilder> 
          getFeatureFieldBuilder() {
        if (featureBuilder_ == null) {
          featureBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.openlca.geo.geojson.Proto.Feature, org.openlca.geo.geojson.Proto.Feature.Builder, org.openlca.geo.geojson.Proto.FeatureOrBuilder>(
                  feature_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          feature_ = null;
        }
        return featureBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:geoproto.FeatureCollection)
    }

    // @@protoc_insertion_point(class_scope:geoproto.FeatureCollection)
    private static final org.openlca.geo.geojson.Proto.FeatureCollection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.openlca.geo.geojson.Proto.FeatureCollection();
    }

    public static org.openlca.geo.geojson.Proto.FeatureCollection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FeatureCollection>
        PARSER = new com.google.protobuf.AbstractParser<FeatureCollection>() {
      @java.lang.Override
      public FeatureCollection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FeatureCollection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FeatureCollection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FeatureCollection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.openlca.geo.geojson.Proto.FeatureCollection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_Point_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_MultiPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_MultiPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_LineString_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_LineString_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_MultiLineString_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_MultiLineString_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_Polygon_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_Polygon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_MultiPolygon_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_MultiPolygon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_Geometry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_Geometry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_GeometryCollection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_GeometryCollection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_Feature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_Feature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_Feature_PropertiesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_Feature_PropertiesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_geoproto_FeatureCollection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_geoproto_FeatureCollection_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tgeo.proto\022\010geoproto\"\035\n\005Point\022\t\n\001x\030\001 \001(" +
      "\001\022\t\n\001y\030\002 \001(\001\",\n\nMultiPoint\022\036\n\005point\030\001 \003(" +
      "\0132\017.geoproto.Point\",\n\nLineString\022\036\n\005poin" +
      "t\030\001 \003(\0132\017.geoproto.Point\"<\n\017MultiLineStr" +
      "ing\022)\n\013line_string\030\001 \003(\0132\024.geoproto.Line" +
      "String\"-\n\007Polygon\022\"\n\004ring\030\001 \003(\0132\024.geopro" +
      "to.LineString\"2\n\014MultiPolygon\022\"\n\007polygon" +
      "\030\001 \003(\0132\021.geoproto.Polygon\"\336\002\n\010Geometry\022 " +
      "\n\005point\030\001 \001(\0132\017.geoproto.PointH\000\022+\n\013mult" +
      "i_point\030\002 \001(\0132\024.geoproto.MultiPointH\000\022+\n" +
      "\013line_string\030\003 \001(\0132\024.geoproto.LineString" +
      "H\000\0226\n\021multi_line_string\030\004 \001(\0132\031.geoproto" +
      ".MultiLineStringH\000\022$\n\007polygon\030\005 \001(\0132\021.ge" +
      "oproto.PolygonH\000\022/\n\rmulti_polygon\030\006 \001(\0132" +
      "\026.geoproto.MultiPolygonH\000\022;\n\023geometry_co" +
      "llection\030\007 \001(\0132\034.geoproto.GeometryCollec" +
      "tionH\000B\n\n\010geometry\":\n\022GeometryCollection" +
      "\022$\n\010geometry\030\001 \003(\0132\022.geoproto.Geometry\"\231" +
      "\001\n\007Feature\022$\n\010geometry\030\001 \001(\0132\022.geoproto." +
      "Geometry\0225\n\nproperties\030\002 \003(\0132!.geoproto." +
      "Feature.PropertiesEntry\0321\n\017PropertiesEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\"7\n\021Fe" +
      "atureCollection\022\"\n\007feature\030\001 \003(\0132\021.geopr" +
      "oto.FeatureB \n\027org.openlca.geo.geojsonB\005" +
      "Protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_geoproto_Point_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_geoproto_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_Point_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_geoproto_MultiPoint_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_geoproto_MultiPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_MultiPoint_descriptor,
        new java.lang.String[] { "Point", });
    internal_static_geoproto_LineString_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_geoproto_LineString_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_LineString_descriptor,
        new java.lang.String[] { "Point", });
    internal_static_geoproto_MultiLineString_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_geoproto_MultiLineString_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_MultiLineString_descriptor,
        new java.lang.String[] { "LineString", });
    internal_static_geoproto_Polygon_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_geoproto_Polygon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_Polygon_descriptor,
        new java.lang.String[] { "Ring", });
    internal_static_geoproto_MultiPolygon_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_geoproto_MultiPolygon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_MultiPolygon_descriptor,
        new java.lang.String[] { "Polygon", });
    internal_static_geoproto_Geometry_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_geoproto_Geometry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_Geometry_descriptor,
        new java.lang.String[] { "Point", "MultiPoint", "LineString", "MultiLineString", "Polygon", "MultiPolygon", "GeometryCollection", "Geometry", });
    internal_static_geoproto_GeometryCollection_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_geoproto_GeometryCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_GeometryCollection_descriptor,
        new java.lang.String[] { "Geometry", });
    internal_static_geoproto_Feature_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_geoproto_Feature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_Feature_descriptor,
        new java.lang.String[] { "Geometry", "Properties", });
    internal_static_geoproto_Feature_PropertiesEntry_descriptor =
      internal_static_geoproto_Feature_descriptor.getNestedTypes().get(0);
    internal_static_geoproto_Feature_PropertiesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_Feature_PropertiesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_geoproto_FeatureCollection_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_geoproto_FeatureCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_geoproto_FeatureCollection_descriptor,
        new java.lang.String[] { "Feature", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
